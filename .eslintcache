[{"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js":"1","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx":"2","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/storage.js":"3","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js":"4","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx":"5","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx":"6","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js":"7","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx":"8","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTab.jsx":"9","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx":"10","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx":"11","/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js":"12","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx":"13","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx":"14","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js":"15","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx":"16","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CloseStreamDialog/CloseStreamDialog.jsx":"17","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTabs.jsx":"18","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx":"19","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ContainedButton/ContainedButton.jsx":"20","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerTextInput/StreamerTextInput.jsx":"21","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/InviteCode/InviteCode.jsx":"22","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/functions.js":"23","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStreamDetailsDialog/NewStreamDetailsDialog.jsx":"24","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js":"25","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx":"26","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js":"27","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx":"28","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx":"29","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EditStreamerEvent/EditStreamerEvent.jsx":"30","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PlanPicker/PlanPicker.jsx":"31","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx":"32","/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js":"33","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx":"34","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ChargeConfirmationPage/ChargeConfirmationPage.jsx":"35","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding.jsx":"36","/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js":"37","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js":"38","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx":"39","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx":"40","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js":"41","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx":"42","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/streamQapla.js":"43","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageHandler/LanguageHandler.jsx":"44","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventManagementDialog.jsx":"45","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventWarningQoinsDialog.jsx":"46","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventEndStreamConfirmDialog.jsx":"47","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventConfirmStartDialog.jsx":"48","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventCustomMessageSentConfirmation.jsx":"49","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/RequestActivation/RequestActivation.jsx":"50","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventRewardsRemovedConfirmation.jsx":"51"},{"size":1439,"mtime":1647278497538,"results":"52","hashOfConfig":"53"},{"size":19002,"mtime":1638368376547,"results":"54","hashOfConfig":"53"},{"size":890,"mtime":1637879786783,"results":"55","hashOfConfig":"53"},{"size":362,"mtime":1614731664838,"results":"56","hashOfConfig":"53"},{"size":3579,"mtime":1614731664824,"results":"57","hashOfConfig":"53"},{"size":1288,"mtime":1637785151307,"results":"58","hashOfConfig":"53"},{"size":7954,"mtime":1647824997055,"results":"59","hashOfConfig":"53"},{"size":1592,"mtime":1648073836997,"results":"60","hashOfConfig":"53"},{"size":695,"mtime":1635283796969,"results":"61","hashOfConfig":"53"},{"size":2011,"mtime":1645138755433,"results":"62","hashOfConfig":"53"},{"size":14654,"mtime":1648073962283,"results":"63","hashOfConfig":"53"},{"size":226,"mtime":1636068211199,"results":"64","hashOfConfig":"53"},{"size":6463,"mtime":1648081567021,"results":"65","hashOfConfig":"53"},{"size":17766,"mtime":1648081764669,"results":"66","hashOfConfig":"53"},{"size":6375,"mtime":1647825411215,"results":"67","hashOfConfig":"53"},{"size":3036,"mtime":1645138755473,"results":"68","hashOfConfig":"53"},{"size":1560,"mtime":1638029350634,"results":"69","hashOfConfig":"53"},{"size":383,"mtime":1645138755438,"results":"70","hashOfConfig":"53"},{"size":27611,"mtime":1648146651906,"results":"71","hashOfConfig":"53"},{"size":1023,"mtime":1645138755430,"results":"72","hashOfConfig":"53"},{"size":2079,"mtime":1645138755475,"results":"73","hashOfConfig":"53"},{"size":4067,"mtime":1648074662309,"results":"74","hashOfConfig":"53"},{"size":5281,"mtime":1648146961345,"results":"75","hashOfConfig":"53"},{"size":3205,"mtime":1625936949693,"results":"76","hashOfConfig":"53"},{"size":870,"mtime":1645138755478,"results":"77","hashOfConfig":"53"},{"size":835,"mtime":1642711713952,"results":"78","hashOfConfig":"53"},{"size":25954,"mtime":1648147426391,"results":"79","hashOfConfig":"53"},{"size":2975,"mtime":1614731664830,"results":"80","hashOfConfig":"53"},{"size":17470,"mtime":1648077535913,"results":"81","hashOfConfig":"53"},{"size":20379,"mtime":1645138755431,"results":"82","hashOfConfig":"53"},{"size":18569,"mtime":1641243475579,"results":"83","hashOfConfig":"53"},{"size":1083,"mtime":1645138755428,"results":"84","hashOfConfig":"53"},{"size":4434,"mtime":1648146744061,"results":"85","hashOfConfig":"53"},{"size":19153,"mtime":1645138755429,"results":"86","hashOfConfig":"53"},{"size":8238,"mtime":1645138755429,"results":"87","hashOfConfig":"53"},{"size":14755,"mtime":1645138755472,"results":"88","hashOfConfig":"53"},{"size":527,"mtime":1636998131402,"results":"89","hashOfConfig":"53"},{"size":3681,"mtime":1648075313483,"results":"90","hashOfConfig":"53"},{"size":7668,"mtime":1645138755438,"results":"91","hashOfConfig":"53"},{"size":9461,"mtime":1646088377795,"results":"92","hashOfConfig":"53"},{"size":1799,"mtime":1638029350636,"results":"93","hashOfConfig":"53"},{"size":7544,"mtime":1645138755428,"results":"94","hashOfConfig":"53"},{"size":6921,"mtime":1648074530329,"results":"95","hashOfConfig":"53"},{"size":629,"mtime":1635283796967,"results":"96","hashOfConfig":"53"},{"size":11690,"mtime":1648077493372,"results":"97","hashOfConfig":"53"},{"size":3881,"mtime":1648059620372,"results":"98","hashOfConfig":"53"},{"size":5675,"mtime":1648062477533,"results":"99","hashOfConfig":"53"},{"size":3394,"mtime":1648059604063,"results":"100","hashOfConfig":"53"},{"size":3416,"mtime":1648077371018,"results":"101","hashOfConfig":"53"},{"size":7493,"mtime":1648146417558,"results":"102","hashOfConfig":"53"},{"size":3339,"mtime":1648147426384,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rfo3np",{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"151"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx",["223","224"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/storage.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js",[],["225","226"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx",[],["227","228"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx",["229","230","231","232","233"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTab.jsx",["234"],"import React from 'react';\nimport { withStyles, Tab } from '@material-ui/core';\n\nconst QaplaTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        minWidth: 72,\n        fontWeight: theme.typography.fontWeightRegular,\n        marginRight: theme.spacing(4),\n        fontSize: 18,\n        '&:hover': {\n            color: '#FFF',\n            opacity: 1,\n        },\n        '&$selected': {\n            color: '#FFF',\n            fontWeight: '500',\n        },\n        '&:focus': {\n            color: '#FFF',\n        },\n    },\n    selected: {},\n}))((props) => <Tab {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nexport default (props) => <QaplaTab {...props} />;",["235","236"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx",["237","238"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { changeLanguage, getAvailableLanguages, getCurrentLanguage } from '../../utilities/i18n';\nimport { ReactComponent as TranslateIcon } from './../../assets/Translate.svg';\nimport { ReactComponent as ArrowIcon } from './../../assets/Arrow.svg';\nimport StreamerSelect from '../StreamerSelect/StreamerSelect';\n\nconst useStyles = makeStyles(() => ({\n    languageLabel: {\n        color: '#FFF',\n        fontSize: 16,\n        fontWeight: 600\n    }\n}));\n\nconst LanguageSelect = () => {\n    const [currentLanguageCode, setCurrentLanguageCode] = useState(getCurrentLanguage());\n    const [langData, setLangData] = useState([])\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        let tempLangArr = []\n        getAvailableLanguages().map((languageCode) => (\n            tempLangArr.push({\n                value: languageCode,\n                label: t(`LanguageHandler.languages.${languageCode}`)\n            })\n        ))\n        setLangData(tempLangArr)\n    }, [t])\n\n    const onLanguageChanged = (languageCode) => {\n        changeLanguage(languageCode);\n        setCurrentLanguageCode(languageCode);\n    }\n\n    return (\n        <div style={{\n            display: 'flex'\n        }}>\n            <TranslateIcon style={{\n                display: 'flex'\n            }} />\n            {/* The style of this select needs to be implemented inline */}\n            <div style={{\n                marginTop: '-10px',\n            }}>\n                <StreamerSelect\n                    style={{ backgroundColor: '#141833' }}\n                    data={langData}\n                    value={currentLanguageCode}\n                    onChange={onLanguageChanged}\n                    overflowY='hidden'\n                    overflowX='hidden'\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default LanguageSelect;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx",["239"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx",["240","241","242"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CloseStreamDialog/CloseStreamDialog.jsx",[],["243","244"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTabs.jsx",["245"],"import React from 'react';\nimport { withStyles, Tabs } from '@material-ui/core';\n\nconst QaplaTabs = withStyles((theme) => ({\n    root: {\n        borderBottom: 'transparent',\n        [theme.breakpoints.down('md')]: {\n            paddingLeft: 45\n        }\n    },\n    indicator: {\n        backgroundColor: '#0AFFD2',\n    }\n}))(Tabs);\n\nexport default (props) => <QaplaTabs {...props} />;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx",["246"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ContainedButton/ContainedButton.jsx",[],["247","248"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerTextInput/StreamerTextInput.jsx",[],["249","250"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/InviteCode/InviteCode.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/functions.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStreamDetailsDialog/NewStreamDetailsDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js",[],["251","252"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx",[],["253","254"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx",["255","256","257"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EditStreamerEvent/EditStreamerEvent.jsx",[],["258","259"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PlanPicker/PlanPicker.jsx",["260"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx",["261","262"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, Slide, Button, Dialog, DialogContent, IconButton, List, ListItem, ListItemAvatar, Avatar, ListItemText, Box } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport DayJsUtils from '@date-io/dayjs';\nimport { useTranslation } from 'react-i18next';\n\nimport { ReactComponent as CloseIcon } from './../../assets/CloseIcon.svg';\nimport { ReactComponent as QoinsIcon } from './../../assets/QoinsIcon.svg';\nimport { ReactComponent as BitsIcon } from './../../assets/BitsIcon.svg';\nimport { ReactComponent as DonatedQoinIcon } from './../../assets/DonatedQoin.svg';\nimport { getPeriodStreamerPayments, listenForLastStreamerCheers, removeListenerForLastStreamerCheers } from '../../services/database';\n\nconst useStyles = makeStyles((theme) => ({\n    toggleButton: {\n        borderRadius: 6,\n        textAlign: 'center',\n        marginRight: 8,\n        fontSize: 17,\n        fontStyle: 'normal',\n        fontWeight: 600,\n        paddingLeft: 16,\n        paddingRight: 16,\n        textTransform: 'none',\n        '&:hover': {\n            opacity: '.80',\n            background: '#29326B44 !important'\n        }\n    },\n    scrollPaper: {\n        alignItems: 'flex-start',\n        justifyContent: 'flex-end'\n    },\n    paper: {\n        height: '100vh',\n        background: 'linear-gradient(0deg, #0D1021, #0D1021), #141735',\n        borderRadius: 20,\n        paddingBottom: '5px',\n        padding: '28px 40px',\n        maxWidth: '100%',\n        width: '100%',\n        margin: '21px 17px 0px 0px',\n        [theme.breakpoints.down(\"xs\")]: {\n            width: '100%',\n            margin: '0px',\n            borderRadius: '0px',\n            maxHeight: '100%'\n        },\n        [theme.breakpoints.up(\"sm\")]: {\n            width: '440px'\n        }\n    },\n    dialogRoot: {\n        zIndex: '100 !important',\n        '& .MuiBackdrop-root': {\n            backgroundColor: '#02071E80',\n            backdropFilter: 'blur(5px)',\n            width: '200wh',\n            height: '200vh'\n\n        }\n    },\n    dialogHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        overflow: ''\n    },\n    balanceCurrencyContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: '23px',\n        minWidth: '200px'\n    },\n    balanceCurrencyValue: {\n        display: 'flex',\n        color: '#FFF',\n        fontSize: '48px',\n        lineHeight: '52px',\n        fontWeight: 600,\n        letterSpacing: '-0.86',\n        marginLeft: '12px',\n    },\n    subDataContainer: {\n        marginTop: '30px',\n        color: '#8692FF',\n        fontWeight: '500',\n        fontSize: '14px',\n        lineHeight: '17px',\n        letterSpacing: '0.35px'\n    },\n    periodText: {\n        color: 'rgba(134, 146, 255, 0.65)',\n        fontSize: 14,\n        fontWeight: 600,\n        letterSpacing: .35,\n        marginBottom: 16,\n        cursor: 'pointer'\n    },\n    qoinsDonationPrimaryText: {\n        fontSize: 18,\n        fontWeight: 600,\n        color: '#FFF'\n    },\n    qoinsCheersecondaryText: {\n        fontSize: 14,\n        fontWeight: 500,\n        color: 'rgba(255, 255, 255, .65)'\n    },\n    qoinDonationValueContainer: {\n        display: 'flex',\n        alignSelf: 'flex-start',\n        alignItems: 'center',\n        marginTop: 6\n    },\n    qoinDonationValueText: {\n        color: '#FFF',\n        fontSize: 18,\n        fontWeight: 600,\n        marginRight: 4\n    },\n    list: {\n        display: 'flex',\n        flexDirection: 'column',\n        paddingRight: '20px',\n        marginRight: '-20px',\n        position: 'relative',\n        overflow: 'auto'\n    },\n    periodPicker: {\n        color: '#FFF',\n    },\n    popover: {\n        backgroundColor: '#141833',\n        color: 'white',\n        padding: '15px',\n        '& .MuiPickersCalendarHeader-switchHeader': {\n            '& .MuiIconButton-root:hover': {\n                backgroundColor: '#707070'\n            }\n        },\n\n        '& .MuiButtonBase-root:hover:not(.MuiPickersDay-daySelected)': {\n            backgroundColor: '#3f51b5',\n        },\n        '& .MuiPickersDay-day': {\n            color: 'white'\n        },\n        '& .MuiPickersDay-daySelected': {\n            backgroundColor: '#00beff',\n            color: '#000'\n        },\n        '& .MuiPickersDay-dayDisabled': {\n            color: 'gray'\n        },\n        '& .MuiPickersCalendarHeader-dayLabel': {\n            color: 'white'\n        },\n        '& .MuiPickersClockNumber-clockNumber': {\n            color: 'white'\n        },\n        '& .MuiPickersClockPointer-pointer': {\n            backgroundColor: '#00beff',\n            '& .MuiPickersClockPointer-noPoint': {\n                borderColor: '#00beff',\n            },\n            '& .MuiPickersClockPointer-thumb': {\n                borderColor: '#00beff',\n            }\n        },\n        '& .MuiPickersClockNumber-clockNumberSelected': {\n            color: '#000'\n        }\n    }\n}));\n\nconst DialoogTransaction = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction='left' ref={ref} {...props} />;\n});\n\nconst ToggleButton = ({ currentValue, value, onChange, label }) => {\n    const classes = useStyles();\n    const active = currentValue === value;\n\n    return (\n        <Button\n            className={classes.toggleButton}\n            style={{ background: active ? '#29326B' : 'rgba(41, 50, 107, 0)', color: active ? '#FFF' : 'rgba(255, 255, 255, .6)' }}\n            onClick={() => onChange(value)}>\n            {label || value}\n        </Button>\n    );\n};\n\nconst RecordsHeader = ({ value, Icon, showPeriod, onPeriodChange }) => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [openMonthPicker, setOpenMonthPicker] = useState(false);\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const monthsArray = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date.$d);\n        setOpenMonthPicker(false);\n        if (onPeriodChange) {\n            onPeriodChange(date.$d);\n        }\n    }\n\n    return (\n        <>\n            <div style={{ display: 'flex', flexDirection: 'column', minWidth: '200px' }}>\n                <div className={classes.balanceCurrencyContainer}>\n                    <Icon />\n                    <p className={classes.balanceCurrencyValue}>\n                        {parseInt(value || 0).toLocaleString()}\n                    </p>\n                </div>\n            </div>\n\n            {showPeriod &&\n                <MuiPickersUtilsProvider utils={DayJsUtils}>\n                    {/**\n                     * Box hides the TextField of the picker but allows the user to open\n                     * the dialog to select the period\n                     */}\n                    <Box component='div' visibility='hidden'>\n                        <DatePicker format='MM'\n                            disableFuture\n                            disableToolbar\n                            variant='inline'\n                            views={['month']}\n                            open={openMonthPicker}\n                            openTo='month'\n                            value={selectedDate}\n                            onChange={handleDateChange}\n                            PopoverProps={{\n                                PaperProps: {\n                                    className: classes.popover\n                                }\n                            }} />\n                    </Box>\n                    <div className={classes.periodText} onClick={() => setOpenMonthPicker(true)}>\n                        {t('CheersBitsRecordDialog.period')} {t(`months.${monthsArray[selectedDate.getMonth()]}`)} {selectedDate.getFullYear()}\n                    </div>\n                </MuiPickersUtilsProvider>\n            }\n        </>\n    );\n}\n\nconst QoinsCheers = ({ qoinsBalance, cheers, messages, setPendingMessages, qlanBalance }) => {\n    const classes = useStyles();\n    const [balance, setBalance] = useState(qoinsBalance + qlanBalance);\n\n    useEffect(() => {\n        if (setPendingMessages !== undefined) {\n            setPendingMessages(0);\n        }\n    }, [setPendingMessages]);\n\n    const showDate = () => {\n        const today = new Date();\n        /**\n         * Not all the browsers supports the parameter \"locales\" from the function toLocaleDateString\n         * https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\n         */\n        try {\n            return today.toLocaleDateString('es-MX');\n        } catch (error) {\n            return today.toLocaleDateString();\n        }\n    }\n\n    return (\n        <>\n            {!messages &&\n                <>\n                    <RecordsHeader value={balance} Icon={QoinsIcon} />\n                    <div className={classes.subDataContainer}>\n                        <div style={{ display: 'flex' }}>\n                            <p style={{ display: 'flex', width: '62px' }}> Cheers </p>\n                            <p style={{ display: 'flex', }}> {qoinsBalance.toLocaleString()} </p>\n                        </div>\n                        <div style={{ display: 'flex', marginTop: '30px' }}>\n                            <p style={{ display: 'flex', width: '62px' }}> Qlan </p>\n                            <p style={{ display: 'flex', }}> {qlanBalance.toLocaleString()} </p>\n                        </div>\n                        <p style={{ display: 'flex', color: '#8692FFA6', marginTop: '36px', letterSpacing: '0px' }}>\n                            Cheers recibidos al {showDate()}\n                        </p>\n                    </div>\n                </>\n            }\n            <List className={classes.list} style={{ maxHeight: messages ? '82vh' : '60vh', marginTop: '20px', paddingTop: '0px' }}>\n                {Object.keys(cheers).reverse().map((cheerId) => (\n                    <>\n                        {((messages && cheers[cheerId].message) || (!messages)) &&\n                            <ListItem disableGutters style={{ display: 'flex', flexDirection: 'column', padding: '0px', marginBottom: '40px' }}>\n                                <div style={{ display: 'flex', width: '100%' }}>\n                                    <ListItemAvatar style={{ alignSelf: 'center' }} >\n                                        <Avatar alt={cheers[cheerId].twitchUserName}\n                                            src={cheers[cheerId].photoURL} />\n                                    </ListItemAvatar>\n                                    <ListItemText primary={\n                                        <div style={{ display: 'flex' }}>\n                                            <p>{cheers[cheerId].twitchUserName}</p>\n                                            {!cheers[cheerId].read && <div style={{ backgroundColor: '#8DEBFF', alignSelf: 'center', marginLeft: '8px', width: '8px', height: '8px', borderRadius: '8px' }}>\n                                            </div>}\n                                        </div>\n                                    }\n                                        secondary={formatDate(cheers[cheerId].timestamp)}\n                                        classes={{\n                                            primary: classes.qoinsDonationPrimaryText,\n                                            secondary: classes.qoinsCheersecondaryText\n                                        }} />\n\n                                    <div className={classes.qoinDonationValueContainer}>\n                                        <div className={classes.qoinDonationValueText}>\n                                            {cheers[cheerId].amountQoins}\n                                        </div>\n                                        <DonatedQoinIcon />\n                                    </div>\n                                </div>\n\n                                {messages && cheers[cheerId].message &&\n                                    <div style={{ background: '#3B4BF9', borderRadius: '2px 20px 20px 20px', padding: '16px 20px 16px 20px', alignSelf: 'flex-start' }}>\n                                        <p style={{ color: '#FFF', fontSize: 14, fontWeight: 500, letterSpacing: .35 }}>\n                                            {cheers[cheerId].message}\n                                        </p>\n                                    </div>\n                                }\n                            </ListItem>}\n                    </>\n                ))}\n            </List>\n        </>\n    );\n}\n\nconst PaidBits = ({ bitsBalance, payments, onPeriodChange }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <RecordsHeader value={bitsBalance}\n                Icon={BitsIcon}\n                showPeriod\n                onPeriodChange={onPeriodChange} />\n            <div className={classes.subDataContainer}>\n                <p style={{ display: 'flex' }}> 200 Qoins = 10 Bits </p>\n                <p style={{ display: 'flex', color: '#8692FFA6', marginTop: '36px', letterSpacing: '0px' }}>Bits estimados a entregar con subscripción activa</p>\n                <p style={{ display: 'flex', color: '#FFFFFFA6', marginTop: '45px', lineHeight: '17px', fontWeight: '400' }}>Cheers entregados</p>\n            </div>\n\n            <List className={classes.list} style={{ maxHeight: '54vh', marginTop: '20px', paddingTop: '0px' }}>\n                {Object.keys(payments).reverse().map((paymentId) => (\n                    <ListItem disableGutters>\n                        <ListItemText primary={payments[paymentId].currency}\n                            secondary={formatDate(payments[paymentId].timestamp)}\n                            classes={{\n                                primary: classes.qoinsDonationPrimaryText,\n                                secondary: classes.qoinsCheersecondaryText\n                            }} />\n                        <div className={classes.qoinDonationValueContainer}>\n                            <div className={classes.qoinDonationValueText}>\n                                {payments[paymentId].amount}\n                            </div>\n                        </div>\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    );\n}\n\nconst CheersBitsRecordDialog = ({ user, cheersQoins, qlanQoins, estimatedBits, open, onClose, pressed, setPendingMessages }) => {\n    const [value, setValue] = useState('Qoins');\n    const [qoinsCheers, setQoinsCheers] = useState({});\n    const [paymentsHistory, setPaymentsHistory] = useState({});\n    const classes = useStyles();\n\n    useEffect(() => {\n        async function loadDefaultPayments() {\n            const date = new Date();\n            date.setDate(1);\n            date.setHours(0, 0, 0, 0);\n            const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0, 23, 59, 59, 59);\n            const payments = await getPeriodStreamerPayments(user.uid, date.getTime(), lastDayOfMonth.getTime());\n            setPaymentsHistory(payments.val() || {});\n        }\n\n        if (user && user.uid) {\n            listenForLastStreamerCheers(user.uid, 20, (cheers) => {\n                if (cheers.exists()) {\n                    setQoinsCheers(cheers.val());\n                    let seekUnread = Object.values(cheers.val());\n                    let unreadCount = 0;\n                    seekUnread.forEach(e => {\n                        if (!e.read && e.message) {\n                            unreadCount++\n                        }\n                    });\n                    setPendingMessages(unreadCount)\n                }\n            });\n            loadDefaultPayments();\n        }\n\n\n        return () => {\n            if (user && user.uid) {\n                removeListenerForLastStreamerCheers(user.uid);\n            }\n        };\n    }, [user]);\n\n    const loadPaymentsByTimestamp = async (timestamp) => {\n        const date = new Date(timestamp);\n        date.setDate(1);\n        date.setHours(0, 0, 0, 0);\n        const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0, 23, 59, 59, 59);\n        const payments = await getPeriodStreamerPayments(user.uid, date.getTime(), lastDayOfMonth.getTime());\n        setPaymentsHistory(payments.val() || {});\n    }\n\n    return (\n        <Dialog open={open}\n            onClose={onClose}\n            scroll='paper'\n            TransitionComponent={DialoogTransaction}\n            classes={{\n                scrollPaper: classes.scrollPaper,\n                paper: classes.paper,\n                root: classes.dialogRoot\n            }}\n            TransitionProps={{\n                onEnter: () => {\n                    setValue(pressed)\n                }\n            }}>\n            <DialogContent style={{ padding: '0px', overflow: 'visible' }}>\n                <div className={classes.dialogHeaderContainer}>\n                    <div style={{ marginRight: 96 }}>\n                        <ToggleButton currentValue={value}\n                            value='Qoins'\n                            onChange={setValue} />\n                        <ToggleButton currentValue={value}\n                            value='Bits'\n                            onChange={setValue} />\n                        <ToggleButton currentValue={value}\n                            value='Messages'\n                            label='Mensajes'\n                            onChange={setValue} />\n                    </div>\n                    <IconButton onClick={onClose} style={{ zIndex: '10', alignSelf: 'flex-start', width: '40px', height: '40px', padding: '0px', marginTop: '-4px', marginRight: '-16px' }} >\n                        <CloseIcon style={{ width: '40px', height: '40px' }} />\n                    </IconButton>\n                </div>\n                {value === 'Qoins' &&\n                    <QoinsCheers qoinsBalance={cheersQoins}\n                        cheers={qoinsCheers}\n                        qlanBalance={qlanQoins} />\n                }\n                {value === 'Bits' &&\n                    <PaidBits bitsBalance={estimatedBits}\n                        payments={paymentsHistory}\n                        onPeriodChange={loadPaymentsByTimestamp} />\n                }\n                {value === 'Messages' &&\n                    <QoinsCheers qoinsBalance={cheersQoins}\n                        messages={true}\n                        cheers={qoinsCheers}\n                        setPendingMessages={setPendingMessages}\n                    />\n                }\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nfunction formatDate(timestamp) {\n    const paymentDate = new Date(timestamp);\n\n    const date = paymentDate.getDate() >= 10 ? paymentDate.getDate() : `0${paymentDate.getDate()}`;\n    const month = (paymentDate.getMonth() + 1) >= 10 ? (paymentDate.getMonth() + 1) : `0${(paymentDate.getMonth() + 1)}`;\n\n    return `${date}/${month}/${paymentDate.getFullYear()}`;\n}\n\nexport default CheersBitsRecordDialog;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ChargeConfirmationPage/ChargeConfirmationPage.jsx",["263","264"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { Button, Card, CardContent, Grid, makeStyles } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { ReactComponent as ESvg } from './../../assets/e.svg';\nimport HeartHands from './../../assets/HeartHands.png';\nimport { getSubscriptionPurchaseDetails } from '../../services/database';\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        height: '100vh'\n    },\n    paymentInfoContainer: {\n        paddingLeft: 32,\n        paddingRight: 64,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    eImageContainer: {\n        display: 'flex',\n        width: 80,\n        height: 80,\n        borderRadius: 20,\n        backgroundColor: '#141833',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    subscriptionBought: {\n        marginTop: 48,\n        fontSize: 14,\n        fontWeight: '500',\n        color: 'rgba(255, 255, 255, .6)'\n    },\n    subTerms: {\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    totalPaid: {\n        fontSize: 48,\n        fontWeight: '600',\n        color: 'rgba(255, 255, 255, .9)'\n    },\n    interval: {\n        marginLeft: 6,\n        fontSize: 14,\n        fontWeight: '500',\n        color: 'rgba(255, 255, 255, .6)'\n    },\n    paymentDetails: {\n        marginTop: 48,\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    subscriptionType: {\n        fontSize: 18,\n        fontWeight: '500',\n        color: '#FFF'\n    },\n    paymentInterval: {\n        marginTop: 8,\n        fontSize: 14,\n        fontWeight: '400',\n        color: 'rgba(255, 255, 255, .6)'\n    },\n    itemCost: {\n        fontSize: 18,\n        fontWeight: '500',\n        color: '#FFF'\n    },\n    paymentUntilTodayContainer: {\n        marginTop: 56,\n        color: '#FFF',\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    paymentUntilToday: {\n        fontSize: 24,\n        fontWeight: '500'\n    },\n    thanksCardContainer: {\n        width: '450px',\n        background: 'linear-gradient(128.22deg, #5600E1 23.87%, #B518FF 87.87%), rgba(3, 7, 34, 0.95)',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    thanksCard: {\n        backgroundColor: '#141833',\n        display: 'inline-block',\n        color: '#FFF',\n        maxWidth: '80%',\n        borderRadius: 35\n    },\n    cardContentContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingLeft: 30,\n        paddingRight: 30\n    },\n    thanksTitle: {\n        marginTop: 8,\n        fontSize: 18,\n        fontWeight: '700',\n        textAlign: 'center'\n    },\n    thanksDescription: {\n        marginTop: 24,\n        fontSize: 14,\n        fontWeight: '500',\n        lineHeight: '22px',\n        textAlign: 'center',\n        marginRight: 48,\n        marginLeft: 48\n    },\n    publishButton: {\n        marginTop: 64,\n        marginLeft: 30,\n        marginRight: 30,\n        backgroundColor: '#0AFFD2',\n        borderRadius: 10,\n        color: '#4E2D92',\n        fontSize: 16,\n        fontWeight: '700',\n        paddingTop: 19,\n        paddingBottom: 19,\n        '&:hover': {\n            backgroundColor: '#0AFFD2',\n            opacity: '.95'\n        }\n    },\n    backToDashboardButton: {\n        marginTop: 16,\n        marginBottom: 16,\n        fontSize: 16,\n        fontWeight: '500',\n        color: 'rgba(255, 255, 255, .6)'\n    }\n}));\n\nfunction useQuery() {\n    const { search } = useLocation();\n\n    return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst ChargeConfirmationPage = ({ user }) => {\n    const [totalPaid, setTotalPaid] = useState(0);\n    const [interval, setInterval] = useState('');\n    const [intervalText, setIntervalText] = useState('');\n    const [plan, setPlan] = useState('');\n    const classes = useStyles();\n    const history = useHistory();\n    const query = useQuery();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        async function getDetails() {\n            const id = query.get('subscriptionId');\n            const details = await getSubscriptionPurchaseDetails(user.uid, id);\n            setTotalPaid(details.val().totalPaid);\n\n            setPlan(details.val().plan[0].toUpperCase() + details.val().plan.substring(1));\n\n            setIntervalText(details.val().interval);\n\n            setInterval(t(`ChargeConfirmationPage.intervals.${details.val().interval}`));\n        }\n\n        if (user && user.uid) {\n            getDetails();\n        }\n    }, [user]);\n\n    const onPublishStreamClick = () => {\n        history.push('/create');\n    }\n\n    const onBackToDashboardClick = () => {\n        history.push('/profile');\n    }\n\n    return (\n        <Grid container alignContent='center' className={classes.container}>\n            <Grid item md={6} className={classes.paymentInfoContainer}>\n                <div className={classes.eImageContainer}>\n                    <ESvg />\n                </div>\n                <p className={classes.subscriptionBought}>\n                    {plan && intervalText &&\n                        `Sub ${plan} ${t(`ChargeConfirmationPage.plansPeriods.${intervalText}`)}`\n                    }\n                </p>\n                <div className={classes.subTerms}>\n                    <p className={classes.totalPaid}>\n                        ${(totalPaid).toFixed(2)}\n                    </p>\n                    <p className={classes.interval}>\n                        {interval}\n                    </p>\n                </div>\n                <div className={classes.paymentDetails}>\n                    <div>\n                        <p className={classes.subscriptionType}>\n                            {plan}\n                        </p>\n                        <p className={classes.paymentInterval}>\n                            {intervalText &&\n                                `${t('ChargeConfirmationPage.payment')} ${t(`ChargeConfirmationPage.plansPeriods.${intervalText}`)}`\n                            }\n                        </p>\n                    </div>\n                    <p className={classes.itemCost}>\n                        ${(totalPaid).toFixed(2)}\n                    </p>\n                </div>\n                <div className={classes.paymentUntilTodayContainer}>\n                    <p className={classes.paymentUntilToday}>\n                        {t(`ChargeConfirmationPage.fullPaymentUntilToday`)}\n                    </p>\n                    <p className={classes.paymentUntilToday}>\n                        ${(totalPaid).toFixed(2)}\n                    </p>\n                </div>\n            </Grid>\n            <Grid item md={6} className={classes.thanksCardContainer}>\n                <Card className={classes.thanksCard}>\n                    <div className={classes.cardContentContainer}>\n                        <img src={HeartHands} />\n                        <CardContent>\n                            <p className={classes.thanksTitle}>\n                                {t('ChargeConfirmationPage.thanksForSubscribing')}\n                            </p>\n                            <p className={classes.thanksDescription}>\n                                {t('ChargeConfirmationPage.paymentProcessedSuccessfuly')}\n                            </p>\n                        </CardContent>\n                        <Button fullWidth variant='contained'\n                            className={classes.publishButton}\n                            onClick={onPublishStreamClick}>\n                            {t('ChargeConfirmationPage.publishStream')}\n                        </Button>\n                        <Button className={classes.backToDashboardButton}\n                            onClick={onBackToDashboardClick}>\n                            {t('ChargeConfirmationPage.backToDashboard')}\n                        </Button>\n                    </div>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ChargeConfirmationPage;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx",["265"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, Grid, Card, CardMedia, Tooltip } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    LEFT,\n    RIGHT\n} from '../../utilities/Constants';\n\nimport StreamerTextInput from '../StreamerTextInput/StreamerTextInput';\nimport { ReactComponent as CopyIcon } from './../../assets/CopyPaste.svg';\nimport { ReactComponent as ArrowIcon } from './../../assets/Arrow.svg';\n\nimport Step1 from './../../assets/addCheersTutorial1.jpg';\nimport Step2 from './../../assets/addCheersTutorial2.jpg';\nimport Step3 from './../../assets/addCheersTutorial3.jpg';\nimport Step4 from './../../assets/addCheersTutorial4.jpg';\nimport ContainedButton from '../ContainedButton/ContainedButton';\nimport StreamerSelect from '../StreamerSelect/StreamerSelect';\nimport { getStreamerAlertsSettings, setAlertSetting, writeTestCheer } from './../../services/database';\n\nconst useStyles = makeStyles(() => ({\n    instructionsMargin: {\n        marginTop: 50\n    },\n    instructionTitle: {\n        fontWeight: '600',\n        fontSize: 18,\n        color: '#FFF'\n    },\n    instructionDescription: {\n        marginTop: 24,\n        fontSize: 16,\n        color: '#FFF'\n    },\n    instructionMediaCard: {\n        borderRadius: 20\n    },\n    link: {\n        color: '#6C5DD3',\n        fontWeight: '500',\n        fontSize: 18\n    },\n    container: {\n        marginTop: 60,\n        marginRight: 24\n    },\n    cursorPointer: {\n        cursor: 'pointer'\n    }\n}));\n\nconst InstructionSection = ({ title, description, mediaContainerComponent = 'img', src }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.instructionsMargin}>\n            <p className={classes.instructionTitle}>\n                {title}\n            </p>\n            {description &&\n                <p className={classes.instructionDescription}>\n                    {description}\n                </p>\n            }\n            {src &&\n                <Grid container className={classes.instructionsMargin}>\n                    <Grid xs={12} sm={8} md={7}>\n                        <Card className={classes.instructionMediaCard}>\n                            <CardMedia component={mediaContainerComponent}\n                                width='480'\n                                height='375'\n                                src={src}\n                                frameborder='0'\n                                allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\n                                allowfullscreen />\n                        </Card>\n                    </Grid>\n                </Grid>\n            }\n        </div>\n    );\n};\n\nconst CheersSettings = ({ uid, twitchId }) => {\n    const classes = useStyles();\n    const cheersURL = `https://dashboard.qapla.gg/liveDonations/${twitchId}`;\n    const [openTooltip, setOpenTooltip] = useState(false);\n    const [side, setSide] = useState(LEFT);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        async function getSettings() {\n            const settings = await getStreamerAlertsSettings(uid);\n            if (settings.exists()) {\n                setSide(settings.val().alertSideRight ? RIGHT : LEFT);\n            }\n        }\n\n        if (uid) {\n            getSettings();\n        }\n    }, [uid]);\n\n    const copyCheersURL = () => {\n        navigator.clipboard.writeText(cheersURL);\n        setOpenTooltip(true);\n        setTimeout(() => {\n            setOpenTooltip(false);\n        }, 1250);\n    }\n\n    const sendTestCheer = () => {\n        writeTestCheer(uid, t('CheersSettings.testCheerSuccess'), t('CheersSettings.testCheerError'));\n    }\n\n    const changeSide = (side) => {\n        setSide(side);\n        setAlertSetting(uid, 'alertSideRight', side === RIGHT);\n    }\n\n    return (\n        <div className={classes.container}>\n            <p className={classes.instructionTitle}>\n                {t('CheersSettings.title')}\n            </p>\n            <p className={classes.instructionDescription}>\n                {t('CheersSettings.description')}\n            </p>\n            <Grid container className={classes.instructionsMargin}>\n                <Grid container xs={10} style={{ alignItems: 'center', gap: '20px' }} >\n                    <Grid item xs={4} style={{\n                        display: 'flex',\n                        minWidth: '230px',\n                        maxWidth: '240px'\n                    }}>\n                        <div style={{\n                            display: 'flex',\n                            marginTop: '-8px',\n                            maxWidth: '230px',\n                            minHeight: '50.5px'\n                        }}>\n                            <StreamerSelect\n                                data={[\n                                    {\n                                        value: LEFT,\n                                        label: t('Left')\n                                    },\n                                    {\n                                        value: RIGHT,\n                                        label: t('Right')\n                                    }\n                                ]}\n                                style={{ minHeight: '50.5px', width: '230px', margin: '0px' }}\n                                value={side}\n                                onChange={changeSide}\n                                overflowY='hidden'\n                                overflowX='hidden' />\n                        </div>\n                    </Grid>\n                    <Grid item xs={8} style={{ display: 'flex' }}>\n                        <StreamerTextInput\n                            textInputStyle={{ margin: '0px' }}\n                            containerStyle={{ minWidth: '500px' }}\n                            Icon={\n                                <Tooltip placement='top' open={openTooltip} title='Copiado'>\n                                    <CopyIcon className={classes.cursorPointer} onClick={copyCheersURL} />\n                                </Tooltip>\n                            }\n                            textInputClassName={classes.link}\n                            fullWidth\n                            value={cheersURL} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <InstructionSection title={t('CheersSettings.instruction0.title')}\n                description={<>{t('CheersSettings.instruction0.description')} <b>{t('CheersSettings.instruction0.descriptionBold')}</b></>} />\n            <InstructionSection title={t('CheersSettings.instruction1.title')}\n                description={t('CheersSettings.instruction1.description')} />\n            <InstructionSection title={t('CheersSettings.instruction2.title')}\n                src={Step1} />\n            <InstructionSection title={t('CheersSettings.instruction3.title')}\n                src={Step2} />\n            <InstructionSection title={t('CheersSettings.instruction4.title')}\n                src={Step3} />\n            <InstructionSection title={t('CheersSettings.instruction5.title')}\n                description={t('CheersSettings.instruction5.description')}\n                src={Step4} />\n            <InstructionSection title={t('CheersSettings.instruction6.title')}\n                description={t('CheersSettings.instruction6.description')} />\n            <ContainedButton onClick={sendTestCheer}>\n                {t('CheersSettings.testButton')}\n            </ContainedButton>\n            <div className={classes.instructionsMargin} />\n        </div>\n    );\n}\n\nexport default CheersSettings;",["266","267"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx",["268","269"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/streamQapla.js",["270"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageHandler/LanguageHandler.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventManagementDialog.jsx",["271","272","273"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventWarningQoinsDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventEndStreamConfirmDialog.jsx",[],["274","275"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventConfirmStartDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventCustomMessageSentConfirmation.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/RequestActivation/RequestActivation.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventRewardsRemovedConfirmation.jsx",[],{"ruleId":"276","severity":1,"message":"277","line":207,"column":12,"nodeType":"278","messageId":"279","endLine":207,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":239,"column":8,"nodeType":"282","endLine":239,"endColumn":14,"suggestions":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"284","replacedBy":"288"},{"ruleId":"286","replacedBy":"289"},{"ruleId":"276","severity":1,"message":"290","line":4,"column":5,"nodeType":"278","messageId":"279","endLine":4,"endColumn":11},{"ruleId":"276","severity":1,"message":"291","line":5,"column":5,"nodeType":"278","messageId":"279","endLine":5,"endColumn":12},{"ruleId":"276","severity":1,"message":"292","line":6,"column":5,"nodeType":"278","messageId":"279","endLine":6,"endColumn":9},{"ruleId":"276","severity":1,"message":"293","line":7,"column":5,"nodeType":"278","messageId":"279","endLine":7,"endColumn":11},{"ruleId":"276","severity":1,"message":"294","line":14,"column":8,"nodeType":"278","messageId":"279","endLine":14,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":26,"column":1,"nodeType":"297","endLine":26,"endColumn":51},{"ruleId":"284","replacedBy":"298"},{"ruleId":"286","replacedBy":"299"},{"ruleId":"276","severity":1,"message":"300","line":7,"column":28,"nodeType":"278","messageId":"279","endLine":7,"endColumn":37},{"ruleId":"276","severity":1,"message":"301","line":21,"column":11,"nodeType":"278","messageId":"279","endLine":21,"endColumn":18},{"ruleId":"280","severity":1,"message":"302","line":73,"column":8,"nodeType":"282","endLine":73,"endColumn":38,"suggestions":"303"},{"ruleId":"276","severity":1,"message":"304","line":4,"column":5,"nodeType":"278","messageId":"279","endLine":4,"endColumn":14},{"ruleId":"276","severity":1,"message":"305","line":5,"column":5,"nodeType":"278","messageId":"279","endLine":5,"endColumn":17},{"ruleId":"276","severity":1,"message":"306","line":6,"column":5,"nodeType":"278","messageId":"279","endLine":6,"endColumn":15},{"ruleId":"284","replacedBy":"307"},{"ruleId":"286","replacedBy":"308"},{"ruleId":"295","severity":1,"message":"296","line":16,"column":1,"nodeType":"297","endLine":16,"endColumn":52},{"ruleId":"309","severity":1,"message":"310","line":272,"column":99,"nodeType":"311","messageId":"312","endLine":272,"endColumn":101},{"ruleId":"284","replacedBy":"313"},{"ruleId":"286","replacedBy":"314"},{"ruleId":"284","replacedBy":"315"},{"ruleId":"286","replacedBy":"316"},{"ruleId":"284","replacedBy":"317"},{"ruleId":"286","replacedBy":"318"},{"ruleId":"284","replacedBy":"319"},{"ruleId":"286","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":223,"column":22,"nodeType":"323","messageId":"324","endLine":223,"endColumn":24},{"ruleId":"321","severity":1,"message":"322","line":223,"column":88,"nodeType":"323","messageId":"324","endLine":223,"endColumn":90},{"ruleId":"280","severity":1,"message":"325","line":241,"column":8,"nodeType":"282","endLine":241,"endColumn":78,"suggestions":"326"},{"ruleId":"284","replacedBy":"327"},{"ruleId":"286","replacedBy":"328"},{"ruleId":"276","severity":1,"message":"329","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":20},{"ruleId":"276","severity":1,"message":"330","line":255,"column":21,"nodeType":"278","messageId":"279","endLine":255,"endColumn":31},{"ruleId":"280","severity":1,"message":"331","line":417,"column":8,"nodeType":"282","endLine":417,"endColumn":14,"suggestions":"332"},{"ruleId":"280","severity":1,"message":"333","line":179,"column":8,"nodeType":"282","endLine":179,"endColumn":14,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":235,"column":25,"nodeType":"337","endLine":235,"endColumn":49},{"ruleId":"276","severity":1,"message":"300","line":12,"column":28,"nodeType":"278","messageId":"279","endLine":12,"endColumn":37},{"ruleId":"284","replacedBy":"338"},{"ruleId":"286","replacedBy":"339"},{"ruleId":"276","severity":1,"message":"340","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":14},{"ruleId":"280","severity":1,"message":"341","line":126,"column":8,"nodeType":"282","endLine":126,"endColumn":84,"suggestions":"342"},{"ruleId":"276","severity":1,"message":"343","line":2,"column":100,"nodeType":"278","messageId":"279","endLine":2,"endColumn":126},{"ruleId":"276","severity":1,"message":"344","line":8,"column":10,"nodeType":"278","messageId":"279","endLine":8,"endColumn":37},{"ruleId":"276","severity":1,"message":"345","line":8,"column":39,"nodeType":"278","messageId":"279","endLine":8,"endColumn":56},{"ruleId":"280","severity":1,"message":"346","line":180,"column":8,"nodeType":"282","endLine":180,"endColumn":44,"suggestions":"347"},{"ruleId":"284","replacedBy":"348"},{"ruleId":"286","replacedBy":"349"},"no-unused-vars","'uploadImageStatus' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socialLinksInitialValue'. Either include it or remove the dependency array.","ArrayExpression",["350"],"no-native-reassign",["351"],"no-negated-in-lhs",["352"],["351"],["352"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'LanguageHandler' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["351"],["352"],"'ArrowIcon' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'query'. Either include it or remove the dependency array.",["353"],"'InputBase' is defined but never used.","'NativeSelect' is defined but never used.","'InputLabel' is defined but never used.",["351"],["352"],"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["351"],["352"],["351"],["352"],["351"],["352"],["351"],["352"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'showRewardsOptions' and 'timestamp'. Either include them or remove the dependency array.",["354"],["351"],["352"],"'useHistory' is defined but never used.","'setBalance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPendingMessages'. Either include it or remove the dependency array. If 'setPendingMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"React Hook useEffect has missing dependencies: 'query' and 't'. Either include them or remove the dependency array.",["356"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["351"],["352"],"'styles' is defined but never used.","React Hook useEffect has missing dependencies: 'alertSideRight' and 'mediaContent'. Either include them or remove the dependency array.",["357"],"'removeStreamFromEventsData' is defined but never used.","'sednPushNotificationToTopic' is defined but never used.","'sendCustomMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'stream'. Either include it or remove the dependency array.",["358"],["351"],["352"],{"desc":"359","fix":"360"},"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},"Update the dependencies array to be: [socialLinksInitialValue, user]",{"range":"373","text":"374"},"Update the dependencies array to be: [user, history, isLoadingAuth, query]",{"range":"375","text":"376"},"Update the dependencies array to be: [game, games, streamId, streamType, user, loadingDots, startingStream, showRewardsOptions, timestamp]",{"range":"377","text":"378"},"Update the dependencies array to be: [setPendingMessages, user]",{"range":"379","text":"380"},"Update the dependencies array to be: [query, t, user]",{"range":"381","text":"382"},"Update the dependencies array to be: [streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, mediaContent, alertSideRight]",{"range":"383","text":"384"},"Update the dependencies array to be: [streamStarted, dots, enablingQoins, stream]",{"range":"385","text":"386"},[6822,6828],"[socialLinksInitialValue, user]",[2772,2802],"[user, history, isLoadingAuth, query]",[8485,8555],"[game, games, streamId, streamType, user, loadingDots, startingStream, showRewardsOptions, timestamp]",[16012,16018],"[setPendingMessages, user]",[4767,4773],"[query, t, user]",[5527,5603],"[streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, mediaContent, alertSideRight]",[5051,5087],"[streamStarted, dots, enablingQoins, stream]"]
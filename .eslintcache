[{"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PubSubTest/PubSubTest.jsx":"1","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PlanPicker/PlanPicker.jsx":"2","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js":"3","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx":"4","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx":"5","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Lottery/Lottery.jsx":"6","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx":"7","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ProcessingPaymentDialog/ProcessingPaymentDialog.jsx":"8","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx":"9","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx":"10","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx":"11","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js":"12","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx":"13","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTabs.jsx":"14","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ContainedButton/ContainedButton.jsx":"15","/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js":"16","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx":"17","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/AddStreamerLinks/AddStreamerLinks.jsx":"18","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CustomerPortal/CustomerPortal.jsx":"19","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx":"20","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx":"21","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTab.jsx":"22","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx":"23","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/SubscriptionCheckout/SubscriptionCheckout.jsx":"24","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx":"25","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx":"26","/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js":"27","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/InviteCode/InviteCode.jsx":"28","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackagesCheckout/StreamsPackagesCheckout.jsx":"29","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/functions.js":"30","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerTextInput/StreamerTextInput.jsx":"31","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js":"32","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js":"33","/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js":"34","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EditStreamerEvent/EditStreamerEvent.jsx":"35","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js":"36","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx":"37","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStreamDetailsDialog/NewStreamDetailsDialog.jsx":"38","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CloseStreamDialog/CloseStreamDialog.jsx":"39","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx":"40"},{"size":27430,"mtime":1636585925172,"results":"41","hashOfConfig":"42"},{"size":17139,"mtime":1636139608343,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1614731664838,"results":"44","hashOfConfig":"42"},{"size":6114,"mtime":1635283796972,"results":"45","hashOfConfig":"42"},{"size":24158,"mtime":1635892868509,"results":"46","hashOfConfig":"42"},{"size":9802,"mtime":1635283796968,"results":"47","hashOfConfig":"42"},{"size":2466,"mtime":1635892868510,"results":"48","hashOfConfig":"42"},{"size":1910,"mtime":1635977168253,"results":"49","hashOfConfig":"42"},{"size":1011,"mtime":1614731664821,"results":"50","hashOfConfig":"42"},{"size":1596,"mtime":1635283796967,"results":"51","hashOfConfig":"42"},{"size":2975,"mtime":1614731664830,"results":"52","hashOfConfig":"42"},{"size":22479,"mtime":1636488842792,"results":"53","hashOfConfig":"42"},{"size":13427,"mtime":1635283796966,"results":"54","hashOfConfig":"42"},{"size":291,"mtime":1635283796969,"results":"55","hashOfConfig":"42"},{"size":962,"mtime":1635977168250,"results":"56","hashOfConfig":"42"},{"size":226,"mtime":1636068211199,"results":"57","hashOfConfig":"42"},{"size":835,"mtime":1635283796970,"results":"58","hashOfConfig":"42"},{"size":2273,"mtime":1635283796966,"results":"59","hashOfConfig":"42"},{"size":968,"mtime":1635370277265,"results":"60","hashOfConfig":"42"},{"size":1288,"mtime":1635977168255,"results":"61","hashOfConfig":"42"},{"size":5291,"mtime":1635283796969,"results":"62","hashOfConfig":"42"},{"size":695,"mtime":1635283796969,"results":"63","hashOfConfig":"42"},{"size":3579,"mtime":1614731664824,"results":"64","hashOfConfig":"42"},{"size":4392,"mtime":1635977168256,"results":"65","hashOfConfig":"42"},{"size":1361,"mtime":1635283796971,"results":"66","hashOfConfig":"42"},{"size":11319,"mtime":1635458785012,"results":"67","hashOfConfig":"42"},{"size":5039,"mtime":1635459507613,"results":"68","hashOfConfig":"42"},{"size":3325,"mtime":1614731664825,"results":"69","hashOfConfig":"42"},{"size":2461,"mtime":1635977168255,"results":"70","hashOfConfig":"42"},{"size":2751,"mtime":1636488842791,"results":"71","hashOfConfig":"42"},{"size":1784,"mtime":1635283796972,"results":"72","hashOfConfig":"42"},{"size":28710,"mtime":1635964215924,"results":"73","hashOfConfig":"42"},{"size":811,"mtime":1635461096566,"results":"74","hashOfConfig":"42"},{"size":527,"mtime":1635283796972,"results":"75","hashOfConfig":"42"},{"size":20379,"mtime":1633450179136,"results":"76","hashOfConfig":"42"},{"size":1799,"mtime":1636223360364,"results":"77","hashOfConfig":"42"},{"size":14559,"mtime":1635283796970,"results":"78","hashOfConfig":"42"},{"size":3205,"mtime":1625936949693,"results":"79","hashOfConfig":"42"},{"size":1560,"mtime":1636586129985,"results":"80","hashOfConfig":"42"},{"size":6221,"mtime":1635284019981,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rfo3np",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PubSubTest/PubSubTest.jsx",["172"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PlanPicker/PlanPicker.jsx",["173"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js",[],["174","175"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx",[],["176","177"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx",["178","179"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Lottery/Lottery.jsx",["180","181","182","183","184","185"],"import React, { useState } from 'react';\nimport { makeStyles, Container, FormControlLabel, Checkbox, Button, InputAdornment, InputLabel, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\n\nimport { signInWithTwitch } from '../../services/auth';\nimport { updateStreamerProfile } from '../../services/database';\nimport { createCustomReward, deleteCustomReward, disableCustomReward, enableCustomReward, getAllRewardRedemptions } from '../../services/twitch';\nimport StreamerTextInput from '../StreamerTextInput/StreamerTextInput';\nimport { ReactComponent as CheckedIcon } from './../../assets/CheckedIcon.svg';\nimport { ReactComponent as UncheckedIcon } from './../../assets/UncheckedIcon.svg';\nimport ContainedButton from '../ContainedButton/ContainedButton';\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        color: '#FFF',\n        fontSize: '14px'\n    }\n}));\n\nconst Lottery = ({ user }) => {\n    const [lotteryTitle, setLotteryTitle] = useState('Sorteo Qapla (TEST)');\n    const [lotteryCost, setLotteryCost] = useState(0);\n    const [enabledLottery, setEnabledLottery] = useState(true);\n    const [isMaxPerStreamEnabled, setIsMaxPerStreamEnabled] = useState(false);\n    const [maxPerStream, setMaxPerStream] = useState(1);\n    const [isMaxPerUserPerStreamEnabled, setIsMaxPerUserPerStreamEnabled] = useState(false);\n    const [maxPerUserPerStream, setMaxPerUserPerStream] = useState(1);\n    const [rewardId, setRewardId] = useState('');\n    const [helpMessage, setHelpMessage] = useState('');\n\n    const classes = useStyles();\n\n    const createLotteryReward = async () => {\n        const userCredentialsUpdated = { access_token: user.twitchAccessToken, refresh_token: user.refreshToken }; //await handleTwitchSignIn();\n        const reward = await createCustomReward(\n            user.uid,\n            user.id,\n            userCredentialsUpdated.access_token,\n            userCredentialsUpdated.refresh_token,\n            lotteryTitle,\n            lotteryCost,\n            enabledLottery,\n            handleTwitchSignIn,\n            isMaxPerStreamEnabled,\n            maxPerStream,\n            isMaxPerUserPerStreamEnabled,\n            maxPerUserPerStream\n        );\n\n        if (reward) {\n            setRewardId(reward.id);\n        } else {\n            alert('La recompensa no pudo ser creada');\n        }\n    }\n\n    const handleTwitchSignIn = async () => {\n        let user = await signInWithTwitch();\n        await updateStreamerProfile(user.firebaseAuthUser.user.uid, user.userData);\n\n        user.access_token = user.userData.twitchAccessToken;\n        user.refresh_token = user.userData.refreshToken;\n        return user;\n    }\n\n    const disableReward = async () => {\n        const userCredentialsUpdated = { access_token: user.twitchAccessToken, refresh_token: user.refreshToken }; //await handleTwitchSignIn();\n        const status = await disableCustomReward(\n            user.uid,\n            user.id,\n            userCredentialsUpdated.access_token,\n            userCredentialsUpdated.refresh_token,\n            rewardId,\n            handleTwitchSignIn\n        );\n\n        if (status === 200) {\n            setEnabledLottery(false);\n            alert('Recompensa deshabilitada');\n        } else {\n            alert('Hubo problemas al deshabilitar la recompensa, contacta con soporte tecnico');\n        }\n    }\n\n    const enableReward = async () => {\n        const userCredentialsUpdated = { access_token: user.twitchAccessToken, refresh_token: user.refreshToken }; //await handleTwitchSignIn();\n        const status = await enableCustomReward(\n            user.uid,\n            user.id,\n            userCredentialsUpdated.access_token,\n            userCredentialsUpdated.refresh_token,\n            rewardId,\n            handleTwitchSignIn\n        );\n\n        if (status === 200) {\n            setEnabledLottery(true);\n            alert('Recompensa habilitada');\n        } else {\n            alert('Hubo problemas al habilitar la recompensa, contacta con soporte tecnico');\n        }\n    }\n\n    const pickRandomUserFromList = async () => {\n        const userCredentialsUpdated = { access_token: user.twitchAccessToken, refresh_token: user.refreshToken }; //await handleTwitchSignIn();\n        setHelpMessage('Obteniendo lista');\n        const userList = await getAllRewardRedemptions(\n            user.uid,\n            user.id,\n            userCredentialsUpdated.access_token,\n            userCredentialsUpdated.refresh_token,\n            rewardId,\n            handleTwitchSignIn\n        );\n\n        if (userList.length > 0) {\n            setTimeout(() => {\n                setHelpMessage('Buscando al ganador...');\n                const randomIndex = Math.floor(Math.random() * userList.length);\n                console.log(randomIndex);\n                console.log(userList);\n                console.log(userList[randomIndex]);\n                setTimeout(() => {\n                    console.log(userList[randomIndex]);\n                    setHelpMessage(`El ganador es:  ${userList[randomIndex].user_name}`);\n                }, 2000);\n            }, 1500);\n        } else {\n            setHelpMessage('Nadie ha canjeado la recompensa aun');\n        }\n    }\n\n    const finishLottery = async () => {\n        const userCredentialsUpdated = { access_token: user.twitchAccessToken, refresh_token: user.refreshToken }; //await handleTwitchSignIn();\n\n        setHelpMessage('Terminando sorteo');\n        await deleteCustomReward(user.uid, user.id, userCredentialsUpdated.access_token, userCredentialsUpdated.refresh_token, rewardId, handleTwitchSignIn);\n        setRewardId('');\n        setHelpMessage('Recompensa eliminada correctamente');\n    }\n\n    return (\n        <Container>\n            <br /><br /><br />\n            {!rewardId ?\n                <>\n                    <StreamerTextInput label='Nombre de la recompensa'\n                        value={lotteryTitle}\n                        onChange={(e) => setLotteryTitle(e.target.value)} />\n                    <StreamerTextInput label='Costo de la recompensa'\n                        type='number'\n                        value={lotteryCost}\n                        onChange={(e) => setLotteryCost(e.target.value)} />\n                    <FormControlLabel\n                        checked={enabledLottery}\n                        onChange={(e) => setEnabledLottery(e.target.checked)}\n                        classes={{ label: classes.label }}\n                        control={\n                            <Checkbox defaultChecked\n                                checkedIcon={<CheckedIcon />}\n                                icon={<UncheckedIcon />}\n                                style={{ backgroundColor: 'transparent' }} />\n                        }\n                        label='Hacer visible al crear' />\n                    <br />\n                    <FormControlLabel\n                        checked={isMaxPerStreamEnabled}\n                        onChange={(e) => setIsMaxPerStreamEnabled(e.target.checked)}\n                        classes={{ label: classes.label }}\n                        control={\n                            <Checkbox defaultChecked\n                                checkedIcon={<CheckedIcon />}\n                                icon={<UncheckedIcon />}\n                                style={{ backgroundColor: 'transparent' }} />\n                        }\n                        label='Limite por stream' />\n                    <StreamerTextInput label='Maximo por stream'\n                        disabled={!isMaxPerStreamEnabled}\n                        value={isMaxPerStreamEnabled ? maxPerStream : 'Ilimitado'}\n                        onChange={(e) => setMaxPerStream(e.target.value)} />\n                    <FormControlLabel\n                        checked={isMaxPerUserPerStreamEnabled}\n                        onChange={(e) => setIsMaxPerUserPerStreamEnabled(e.target.checked)}\n                        classes={{ label: classes.label }}\n                        control={\n                            <Checkbox defaultChecked\n                                checkedIcon={<CheckedIcon />}\n                                icon={<UncheckedIcon />}\n                                style={{ backgroundColor: 'transparent' }} />\n                        }\n                        label='Limite por usuario por stream' />\n                    <StreamerTextInput label='Maximo por usuario por stream'\n                        disabled={!isMaxPerUserPerStreamEnabled}\n                        value={isMaxPerUserPerStreamEnabled ? maxPerUserPerStream : 'Ilimitado'}\n                        onChange={(e) => setMaxPerUserPerStream(e.target.value)} />\n                    <br />\n                    <ContainedButton onClick={createLotteryReward}>\n                        Crear recompensa\n                    </ContainedButton>\n                </>\n                :\n                <>\n                    {enabledLottery ?\n                        <ContainedButton onClick={disableReward}>\n                            Deshabilitar recompensa\n                        </ContainedButton>\n                        :\n                        <ContainedButton onClick={enableReward}>\n                            Habilitar recompensa\n                        </ContainedButton>\n                    }\n                    <ContainedButton onClick={pickRandomUserFromList}>\n                        Seleccionar usuario\n                    </ContainedButton>\n                    <ContainedButton onClick={finishLottery}>\n                        Eliminar recompensa\n                    </ContainedButton>\n                </>\n            }\n            <p style={{ color: '#FFF', fontSize: 18 }}>\n                {helpMessage}\n            </p>\n        </Container>\n    );\n}\n\nexport default Lottery;",["186","187"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ProcessingPaymentDialog/ProcessingPaymentDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx",[],["188","189"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx",[],["190","191"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTabs.jsx",["192"],"import React from 'react';\nimport { withStyles, Tabs } from '@material-ui/core';\n\nconst QaplaTabs = withStyles({\n    root: {\n        borderBottom: 'transparent',\n    },\n    indicator: {\n        backgroundColor: '#0AFFD2',\n    },\n})(Tabs);\n\nexport default (props) => <QaplaTabs {...props} />;",["193","194"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ContainedButton/ContainedButton.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/AddStreamerLinks/AddStreamerLinks.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CustomerPortal/CustomerPortal.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTab.jsx",["195"],"import React from 'react';\nimport { withStyles, Tab } from '@material-ui/core';\n\nconst QaplaTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        minWidth: 72,\n        fontWeight: theme.typography.fontWeightRegular,\n        marginRight: theme.spacing(4),\n        fontSize: 18,\n        '&:hover': {\n            color: '#FFF',\n            opacity: 1,\n        },\n        '&$selected': {\n            color: '#FFF',\n            fontWeight: '500',\n        },\n        '&:focus': {\n            color: '#FFF',\n        },\n    },\n    selected: {},\n}))((props) => <Tab {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nexport default (props) => <QaplaTab {...props} />;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx",[],["196","197"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/SubscriptionCheckout/SubscriptionCheckout.jsx",["198"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx",["199"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/InviteCode/InviteCode.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackagesCheckout/StreamsPackagesCheckout.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/functions.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerTextInput/StreamerTextInput.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EditStreamerEvent/EditStreamerEvent.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStreamDetailsDialog/NewStreamDetailsDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CloseStreamDialog/CloseStreamDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx",["200","201"],{"ruleId":"202","severity":1,"message":"203","line":211,"column":8,"nodeType":"204","endLine":211,"endColumn":81,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":176,"column":11,"nodeType":"208","messageId":"209","endLine":176,"endColumn":18},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"210","replacedBy":"214"},{"ruleId":"212","replacedBy":"215"},{"ruleId":"202","severity":1,"message":"216","line":111,"column":8,"nodeType":"204","endLine":111,"endColumn":14,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":228,"column":100,"nodeType":"220","messageId":"221","endLine":228,"endColumn":102},{"ruleId":"206","severity":1,"message":"222","line":2,"column":61,"nodeType":"208","messageId":"209","endLine":2,"endColumn":67},{"ruleId":"206","severity":1,"message":"223","line":2,"column":69,"nodeType":"208","messageId":"209","endLine":2,"endColumn":83},{"ruleId":"206","severity":1,"message":"224","line":2,"column":85,"nodeType":"208","messageId":"209","endLine":2,"endColumn":95},{"ruleId":"206","severity":1,"message":"225","line":2,"column":97,"nodeType":"208","messageId":"209","endLine":2,"endColumn":106},{"ruleId":"206","severity":1,"message":"226","line":2,"column":108,"nodeType":"208","messageId":"209","endLine":2,"endColumn":124},{"ruleId":"206","severity":1,"message":"227","line":2,"column":126,"nodeType":"208","messageId":"209","endLine":2,"endColumn":142},{"ruleId":"210","replacedBy":"228"},{"ruleId":"212","replacedBy":"229"},{"ruleId":"210","replacedBy":"230"},{"ruleId":"212","replacedBy":"231"},{"ruleId":"210","replacedBy":"232"},{"ruleId":"212","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":13,"column":1,"nodeType":"236","endLine":13,"endColumn":52},{"ruleId":"210","replacedBy":"237"},{"ruleId":"212","replacedBy":"238"},{"ruleId":"234","severity":1,"message":"235","line":26,"column":1,"nodeType":"236","endLine":26,"endColumn":51},{"ruleId":"210","replacedBy":"239"},{"ruleId":"212","replacedBy":"240"},{"ruleId":"202","severity":1,"message":"241","line":73,"column":8,"nodeType":"204","endLine":73,"endColumn":63,"suggestions":"242"},{"ruleId":"206","severity":1,"message":"243","line":35,"column":7,"nodeType":"208","messageId":"209","endLine":35,"endColumn":18},{"ruleId":"206","severity":1,"message":"244","line":14,"column":28,"nodeType":"208","messageId":"209","endLine":14,"endColumn":45},{"ruleId":"202","severity":1,"message":"245","line":86,"column":8,"nodeType":"204","endLine":86,"endColumn":68,"suggestions":"246"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onPong', 'rewardsAreCreated', and 't'. Either include them or remove the dependency array.","ArrayExpression",["247"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["250"],"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.",["248"],["249"],["248"],["249"],["248"],["249"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["248"],["249"],["248"],["249"],"React Hook useEffect has an unnecessary dependency: 'userIsTryingToSubscribe'. Either exclude it or remove the dependency array. Outer scope values like 'userIsTryingToSubscribe' aren't valid dependencies because mutating them doesn't re-render the component.",["251"],"'ProfileIcon' is assigned a value but never used.","'setAlertSideRight' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'alertSideRight'. Either include it or remove the dependency array.",["252"],{"desc":"253","fix":"254"},"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [streamId, connectedToTwitch, user, rewardsIds, oldUser, streamTimestamp, rewardsAreCreated, t, onPong]",{"range":"261","text":"262"},"Update the dependencies array to be: [history, user]",{"range":"263","text":"264"},"Update the dependencies array to be: [user, history, billingPageId]",{"range":"265","text":"266"},"Update the dependencies array to be: [streamerId, streamerUid, donationQueue, listenersAreSetted, alertSideRight]",{"range":"267","text":"268"},[7598,7671],"[streamId, connectedToTwitch, user, rewardsIds, oldUser, streamTimestamp, rewardsAreCreated, t, onPong]",[3801,3807],"[history, user]",[3491,3546],"[user, history, billingPageId]",[3393,3453],"[streamerId, streamerUid, donationQueue, listenersAreSetted, alertSideRight]"]
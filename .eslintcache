[{"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx":"1","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx":"2","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/functions.js":"3","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx":"4","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js":"5","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js":"6","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx":"7","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QStore/QStore.jsx":"8","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ChargeConfirmationPage/ChargeConfirmationPage.jsx":"9","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx":"10","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QlanProgressBar/QlanProgressBar.jsx":"11","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventConfirmStartDialog.jsx":"12","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx":"13","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/RequestActivation/RequestActivation.jsx":"14","/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js":"15","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js":"16","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx":"17","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventManagementDialog.jsx":"18","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js":"19","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js":"20","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js":"21","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx":"22","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx":"23","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerTextInput/StreamerTextInput.jsx":"24","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageHandler/LanguageHandler.jsx":"25","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx":"26","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx":"27","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx":"28","/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js":"29","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTab.jsx":"30","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/storage.js":"31","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventRewardsRemovedConfirmation.jsx":"32","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventCustomMessageSentConfirmation.jsx":"33","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsLeft/StreamsLeft.jsx":"34","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js":"35","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js":"36","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx":"37","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsSwitch/StreamsSwitch.jsx":"38","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventWarningQoinsDialog.jsx":"39","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx":"40","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/streamQapla.js":"41","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTerms/QaplaTerms.jsx":"42","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx":"43","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventEndStreamConfirmDialog.jsx":"44","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx":"45","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx":"46","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx":"47","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStreamSuccessDialog.jsx":"48"},{"size":6520,"mtime":1654019625274,"results":"49","hashOfConfig":"50"},{"size":19101,"mtime":1655243694036,"results":"51","hashOfConfig":"50"},{"size":6147,"mtime":1654019317817,"results":"52","hashOfConfig":"50"},{"size":29369,"mtime":1655243507803,"results":"53","hashOfConfig":"50"},{"size":32879,"mtime":1655147842860,"results":"54","hashOfConfig":"50"},{"size":870,"mtime":1650310830028,"results":"55","hashOfConfig":"50"},{"size":3579,"mtime":1614731664824,"results":"56","hashOfConfig":"50"},{"size":5900,"mtime":1654208391761,"results":"57","hashOfConfig":"50"},{"size":8238,"mtime":1650310829995,"results":"58","hashOfConfig":"50"},{"size":9586,"mtime":1652287782963,"results":"59","hashOfConfig":"50"},{"size":6312,"mtime":1652287782962,"results":"60","hashOfConfig":"50"},{"size":3357,"mtime":1650310830003,"results":"61","hashOfConfig":"50"},{"size":2011,"mtime":1650310829999,"results":"62","hashOfConfig":"50"},{"size":11665,"mtime":1654723063808,"results":"63","hashOfConfig":"50"},{"size":527,"mtime":1636998131402,"results":"64","hashOfConfig":"50"},{"size":3948,"mtime":1655147842859,"results":"65","hashOfConfig":"50"},{"size":20823,"mtime":1655414968884,"results":"66","hashOfConfig":"50"},{"size":13345,"mtime":1650310830004,"results":"67","hashOfConfig":"50"},{"size":2589,"mtime":1654551560223,"results":"68","hashOfConfig":"50"},{"size":1505,"mtime":1654207064100,"results":"69","hashOfConfig":"50"},{"size":362,"mtime":1614731664838,"results":"70","hashOfConfig":"50"},{"size":34471,"mtime":1654019625272,"results":"71","hashOfConfig":"50"},{"size":1592,"mtime":1650310830008,"results":"72","hashOfConfig":"50"},{"size":2079,"mtime":1650310830014,"results":"73","hashOfConfig":"50"},{"size":629,"mtime":1635283796967,"results":"74","hashOfConfig":"50"},{"size":7544,"mtime":1650310829994,"results":"75","hashOfConfig":"50"},{"size":17706,"mtime":1654213450731,"results":"76","hashOfConfig":"50"},{"size":18699,"mtime":1655392927133,"results":"77","hashOfConfig":"50"},{"size":226,"mtime":1649101763451,"results":"78","hashOfConfig":"50"},{"size":695,"mtime":1635283796969,"results":"79","hashOfConfig":"50"},{"size":890,"mtime":1650310821741,"results":"80","hashOfConfig":"50"},{"size":3339,"mtime":1650310830005,"results":"81","hashOfConfig":"50"},{"size":3416,"mtime":1650310830004,"results":"82","hashOfConfig":"50"},{"size":1625,"mtime":1650310830018,"results":"83","hashOfConfig":"50"},{"size":6836,"mtime":1654019625301,"results":"84","hashOfConfig":"50"},{"size":8157,"mtime":1654629223004,"results":"85","hashOfConfig":"50"},{"size":1288,"mtime":1648248621496,"results":"86","hashOfConfig":"50"},{"size":1520,"mtime":1654019625276,"results":"87","hashOfConfig":"50"},{"size":3844,"mtime":1650310830005,"results":"88","hashOfConfig":"50"},{"size":3036,"mtime":1650310830011,"results":"89","hashOfConfig":"50"},{"size":6918,"mtime":1655147827464,"results":"90","hashOfConfig":"50"},{"size":29202,"mtime":1650310830006,"results":"91","hashOfConfig":"50"},{"size":1083,"mtime":1650310829993,"results":"92","hashOfConfig":"50"},{"size":5675,"mtime":1650310830004,"results":"93","hashOfConfig":"50"},{"size":2975,"mtime":1614731664830,"results":"94","hashOfConfig":"50"},{"size":14200,"mtime":1655415449312,"results":"95","hashOfConfig":"50"},{"size":835,"mtime":1642711713952,"results":"96","hashOfConfig":"50"},{"size":3326,"mtime":1655147842854,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"rfo3np",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx",["207"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Grid,\n    Button,\n    Hidden\n} from '@material-ui/core';\nimport dayjs from 'dayjs';\n\nimport { ReactComponent as TwitchIcon } from './../../assets/twitchIcon.svg';\nimport { ReactComponent as QaplaGaming } from './../../assets/QaplaGamingLandingPage.svg';\nimport styles from './StreamersSignin.module.css';\nimport SignInImage from './../../assets/SignIn.png';\nimport StreamerDashboardContainer from '../StreamerDashboardContainer/StreamerDashboardContainer';\nimport { signInWithTwitch, signUpOrSignInTwitchUser } from '../../services/auth';\nimport { getUserToken, subscribeStreamerToTwitchWebhook, subscribeStreamerToMailerLiteGroup } from '../../services/functions';\nimport { createStreamerProfile, updateStreamerProfile, userHasPublicProfile } from '../../services/database';\nimport QaplaTerms from '../QaplaTerms/QaplaTerms';\nimport { webhookStreamOffline, webhookStreamOnline } from '../../utilities/Constants';\nimport { getTwitchUserData } from '../../services/twitch';\n\nvar utc = require('dayjs/plugin/utc');\ndayjs.extend(utc);\n\nfunction useQuery() {\n    const { search } = useLocation();\n\n    return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst StreamersSignin = ({ user, title }) => {\n    const [isLoadingAuth, setIsLoadingAuth] = useState(false);\n    const [openTermsAndConditionsDialog, setOpenTermsAndConditionsDialog] = useState(false);\n    const history = useHistory();\n    const query = useQuery();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        async function checkIfUsersIsSigningIn() {\n            const twitchClientCode = query.get('code');\n\n            if (!isLoadingAuth && !user && twitchClientCode) {\n                setIsLoadingAuth(true);\n                const tokenData = await getUserToken(twitchClientCode);\n                if (tokenData && tokenData.data && tokenData.data.access_token) {\n                    const userData = await getTwitchUserData(tokenData.data.access_token);\n                    const user = await signUpOrSignInTwitchUser(userData, tokenData.data);\n\n                    if (user.userData.isNewUser) {\n                        try {\n                            await subscribeStreamerToMailerLiteGroup(user.userData.email, user.userData.displayName);\n                        } catch (error) {\n                            console.error(error);\n                        }\n\n                        await subscribeStreamerToTwitchWebhook(user.userData.id, webhookStreamOnline.type, webhookStreamOnline.callback);\n                        await subscribeStreamerToTwitchWebhook(user.userData.id, webhookStreamOffline.type, webhookStreamOffline.callback);\n                        await createStreamerProfile(user.firebaseAuthUser.user.uid, user.userData);\n                    }\n\n                    try {\n                        await updateStreamerProfile(user.firebaseAuthUser.user.uid, {\n                            twitchAccessToken: tokenData.data.access_token,\n                            refreshToken: tokenData.data.refresh_token,\n                            displayName: user.userData.displayName,\n                            photoUrl: user.userData.photoUrl\n                        });\n                    } catch (error) {\n                        console.log(error);\n                    }\n                } else {\n                    alert(t('StreamersSignin.alerts.errorSignIn'));\n                }\n            }\n        }\n        async function redirectUser(uid) {\n            const userHasBeenRedirectedToCreateProfile = localStorage.getItem('userHasBeenRedirectedToCreateProfile');\n\n            if (userHasBeenRedirectedToCreateProfile) {\n                history.push('/profile');\n            } else {\n                if (await userHasPublicProfile(uid)) {\n                    history.push('/profile');\n                } else {\n                    history.push('/editProfile');\n                    localStorage.setItem('userHasBeenRedirectedToCreateProfile', 'true');\n                }\n            }\n        }\n\n        checkIfUsersIsSigningIn();\n\n        if (user) {\n            redirectUser(user.uid);\n        }\n    }, [user, history, isLoadingAuth]);\n\n    const signIn = () => {\n        setIsLoadingAuth(true);\n        signInWithTwitch();\n        setIsLoadingAuth(false);\n    }\n\n    const closeTermsAndConditionsModal = () => setOpenTermsAndConditionsDialog(false);\n\n    if (user === undefined) {\n        return (\n            <StreamerDashboardContainer>\n                <Grid item md='1' />\n                <Grid item md='6' className={styles.mainContainer}>\n                    <QaplaGaming style={{ marginTop: '100px', marginBottom: '80px', transform: 'scale(0.9)' }} />\n                    <p className={styles.getStarted}>\n                        {title}\n                    </p>\n                    <div className={styles.formContainer}>\n                        <Button variant='contained'\n                            className={styles.continueButton}\n                            disabled={isLoadingAuth}\n                            startIcon={<TwitchIcon />}\n                            onClick={signIn}>\n                            {!isLoadingAuth ?\n                                t('StreamersSignin.signIn')\n                                :\n                                t('StreamersSignin.loading')\n                            }\n                        </Button>\n                        <p style={{ marginTop: '38px', color: '#FFF', fontSize: '.8rem' }}>\n                            {t('StreamersSignin.termsAndConditionsP1')}\n                            <u style={{ cursor: 'pointer', color: '#3B4BF9' }} onClick={() => setOpenTermsAndConditionsDialog(true)}>\n                                {t('StreamersSignin.termsAndConditionsP2')}\n                            </u>\n                        </p>\n                    </div>\n                    <Hidden smDown>\n                        <div className={styles.bottomImage} >\n                            <img src={SignInImage} alt='Sign In' />\n                        </div>\n                    </Hidden>\n                </Grid>\n                <Grid item md='1' />\n                <QaplaTerms open={openTermsAndConditionsDialog} onClose={closeTermsAndConditionsModal} />\n            </StreamerDashboardContainer>\n        );\n    }\n\n    return null;\n}\n\nexport default StreamersSignin;",["208","209"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/functions.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx",["210","211","212"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js",[],["213","214"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx",[],["215","216"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QStore/QStore.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ChargeConfirmationPage/ChargeConfirmationPage.jsx",["217","218"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx",[],["219","220"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QlanProgressBar/QlanProgressBar.jsx",[],["221","222"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventConfirmStartDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx",["223","224"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { changeLanguage, getAvailableLanguages, getCurrentLanguage } from '../../utilities/i18n';\nimport { ReactComponent as TranslateIcon } from './../../assets/Translate.svg';\nimport { ReactComponent as ArrowIcon } from './../../assets/Arrow.svg';\nimport StreamerSelect from '../StreamerSelect/StreamerSelect';\n\nconst useStyles = makeStyles(() => ({\n    languageLabel: {\n        color: '#FFF',\n        fontSize: 16,\n        fontWeight: 600\n    }\n}));\n\nconst LanguageSelect = () => {\n    const [currentLanguageCode, setCurrentLanguageCode] = useState(getCurrentLanguage());\n    const [langData, setLangData] = useState([])\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        let tempLangArr = []\n        getAvailableLanguages().map((languageCode) => (\n            tempLangArr.push({\n                value: languageCode,\n                label: t(`LanguageHandler.languages.${languageCode}`)\n            })\n        ))\n        setLangData(tempLangArr)\n    }, [t])\n\n    const onLanguageChanged = (languageCode) => {\n        changeLanguage(languageCode);\n        setCurrentLanguageCode(languageCode);\n    }\n\n    return (\n        <div style={{\n            display: 'flex'\n        }}>\n            <TranslateIcon style={{\n                display: 'flex'\n            }} />\n            {/* The style of this select needs to be implemented inline */}\n            <div style={{\n                marginTop: '-10px',\n            }}>\n                <StreamerSelect\n                    style={{ backgroundColor: '#141833' }}\n                    data={langData}\n                    value={currentLanguageCode}\n                    onChange={onLanguageChanged}\n                    overflowY='hidden'\n                    overflowX='hidden'\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default LanguageSelect;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/RequestActivation/RequestActivation.jsx",["225"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js",[],["226","227"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js",[],["228","229"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx",["230","231"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventManagementDialog.jsx",["232"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx",["233","234","235","236","237","238","239","240","241"],"import React, { useEffect, useState } from 'react';\nimport { withStyles, makeStyles, Button, Chip, Switch, Tabs, Tab, Tooltip } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nimport StreamerProfileEditorOnBoarding from '../StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding';\n\nimport styles from './StreamerProfileEditor.module.css';\nimport StreamerDashboardContainer from '../StreamerDashboardContainer/StreamerDashboardContainer';\nimport { ReactComponent as FounderBadge } from './../../assets/FounderBadge.svg'\nimport StreamerTextInput from '../StreamerTextInput/StreamerTextInput';\nimport { getStreamerLinks, listenStreamerPublicProfile, saveStreamerLinks, updateStreamerPublicProfile } from '../../services/database';\nimport { ReactComponent as CopyIcon } from './../../assets/CopyPaste.svg';\nimport { ReactComponent as EditIcon } from './../../assets/Edit.svg';\nimport { ReactComponent as CameraIcon } from './../../assets/Camera.svg';\nimport { ReactComponent as XIcon } from './../../assets/xIcon.svg';\nimport ContainedButton from '../ContainedButton/ContainedButton';\nimport { uploadImage } from '../../services/storage';\nimport { MIN_TAGS, PROFILE_BACKGROUND_GRADIENTS } from '../../utilities/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n    gridContainer: {\n        width: '100%',\n        display: 'flex',\n        boxSizing: 'border-box',\n        flexWrap: 'nowrap'\n    },\n    linkPlaceholder: {\n        '&::placeholder': {\n            color: 'rgba(108, 93, 211, 0.4)'\n        }\n    },\n    linkInput: {\n        backgroundColor: '#202750',\n        color: '#FFF',\n        '&.Mui-disabled': {\n            color: '#AAA'\n        }\n    }\n}));\n\nconst EditBioButton = withStyles(() => ({\n    root: {\n        backgroundColor: '#272D5780',\n        color: '#FFFFFF99',\n        justifyItems: 'center',\n        padding: '0.8rem 1rem',\n        borderRadius: '0.8rem',\n        maxHeight: '46px',\n        textTransform: 'capitalize',\n        fontSize: '14px',\n        fontWeight: 600,\n        '&:hover': {\n            backgroundColor: '#24456680'\n        },\n        '&:disabled': {\n            backgroundColor: '#272D5780',\n            color: '#FFFFFF99',\n        },\n        '&#cover': {\n            backgroundColor: '#272D5780'\n        }\n    },\n\n}))(Button);\n\nconst QaplaChip = withStyles(() => ({\n    root: {\n        backgroundColor: '#272D5780',\n        color: '#FFFFFFA6',\n        minHeight: '41px',\n        borderRadius: '100rem',\n        padding: '1.2rem 0.4rem',\n        fontWeight: 600,\n        '&:focus': {\n            backgroundColor: '#4040FF4F',\n        },\n        '&:hover': {\n            backgroundColor: '#4040FF4F',\n            opacity: 0.8\n        }\n    },\n    deletable: {\n        backgroundColor: '#4040FF4F',\n        color: '#FFFFFFA6',\n        '&:focus': {\n            backgroundColor: '#4040FF4F',\n        },\n        '&:hover': {\n\n        }\n    },\n    deleteIcon: {\n        display: 'flex',\n        backgroundColor: '#FFFD',\n        borderRadius: '100px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '&:hover': {\n            backgroundColor: '#F00D'\n        },\n        '&:active': {\n            backgroundColor: '#A00D'\n        }\n    }\n}))(Chip)\n\nconst QaplaSwitch = withStyles(() => ({\n    root: {\n\n    },\n    track: {\n        backgroundColor: '#202750'\n    },\n    checked: {\n        color: '#2CE9D2 !important',\n        '& + .MuiSwitch-track': {\n            backgroundColor: '#202750 !important'\n        }\n    },\n    thumb: {\n\n    }\n}))(Switch);\n\nconst QaplaTabs = withStyles({\n    root: {\n        minHeight: 0,\n        marginTop: '3rem'\n    },\n    indicator: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        '& > span': {\n            // maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#0AFFD2',\n        },\n    },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst QaplaTab = withStyles((theme) => ({\n    root: {\n        padding: '0 0.6rem',\n        minWidth: 0,\n        minHeight: 0,\n        textTransform: 'none',\n        color: '#fff',\n        fontWeight: theme.typography.fontWeightRegular,\n        fontSize: theme.typography.pxToRem(15),\n        marginRight: theme.spacing(1),\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\n\nfunction TabPanel(props) {\n    const { children, value, index, className, ...other } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`profile-editor-tabpanel-${index}`}\n            aria-labelledby={`profile-editor-tab-${index}`}\n            {...other}\n            className={className}\n        >\n            {value === index && (\n                <>\n                    {children}\n                </>\n            )}\n        </div>\n    )\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst StreamerProfileEditor = ({ user }) => {\n    const socialLinksInitialValue = [\n        {\n            socialPage: 'Twitch',\n            value: ''\n        },\n        {\n            socialPage: 'Twitter',\n            value: ''\n        },\n        {\n            socialPage: 'Instagram',\n            value: ''\n        },\n        {\n            socialPage: 'Discord',\n            value: ''\n        },\n        {\n            socialPage: 'Youtube',\n            value: ''\n        },\n        /* {\n            socialPage: 'TikTok',\n            value: ''\n        } */\n    ];\n\n    const socialLinksPlaceholders = {\n        Twitch: `https://twitch.tv/${user ? user.displayName : ''}`,\n        Twitter: `https://twitter.com/${user ? user.displayName : ''}`,\n        Instagram: `https://instagram.com/${user ? user.displayName : ''}`,\n        Discord: `https://discord.gg/inviteCode`,\n        Youtube: `https://youtube.com/chanel/Nos3Ns3C0d3`,\n        tiktok: `https://www.tiktok.com/@${user ? user.displayName : ''}`\n    };\n\n    const classes = useStyles();\n    const [dataIsFetched, setDataIsFetched] = useState(false);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [editingBio, setEditingBio] = useState(false);\n    const [addingTag, setAddingTag] = useState(false);\n    const [streamerBio, setStreamerBio] = useState('');\n    const [backgroundUrl, setBackgroundUrl] = useState('');\n    const [backgroundGradient, setBackgroundGradient] = useState(null);\n    const [uploadImageStatus, setUploadImageStatus] = useState(0);\n    const [socialLinks, setSocialLinks] = useState(socialLinksInitialValue);\n    const [streamerTags, setStreamerTags] = useState([]);\n    const [socialLinksChanged, setSocialLinksChanged] = useState(false);\n    const [openTooltip, setOpenTooltip] = useState(false);\n    const [onBoardingDone, setOnBoardingDone] = useState(true);\n    const [onBoardingStep, setOnBoardingStep] = useState(0);\n    const [badge, setBadge] = useState(false);\n    const [chipHover, setChipHover] = useState({});\n    const { t } = useTranslation();\n    const twitchURL = `https://www.twitch.tv/${user && user.login ? user.login : ''}`;\n\n    useEffect(() => {\n        async function getStreamerInfo() {\n            listenStreamerPublicProfile(user.uid, async (info) => {\n                if (info.exists()) {\n                    const { bio, tags, backgroundUrl, backgroundGradient, badge } = info.val();\n                    if (!tags || tags.length < MIN_TAGS) {\n                        setOnBoardingDone(false);\n                        setOnBoardingStep(4);\n                    }\n\n                    if (!bio) {\n                        setOnBoardingDone(false);\n                        setOnBoardingStep(3);\n                    }\n                    setStreamerBio(bio || '');\n                    setBackgroundGradient(backgroundGradient);\n                    setBackgroundUrl(backgroundUrl);\n                    setStreamerTags(tags || []);\n                    setBadge(badge);\n                } else {\n                    setOnBoardingDone(false);\n                }\n\n                const links = await getStreamerLinks(user.uid);\n                if (links.exists()) {\n                    setSocialLinks(links.val());\n                } else {\n                    /**\n                     * Set Twitch Link by default (we already know this link)\n                     */\n                    const socialLinksWithTwitchAdded = socialLinksInitialValue;\n                    socialLinksWithTwitchAdded[0].value = twitchURL;\n\n                    setSocialLinks(socialLinksInitialValue);\n                }\n\n                setDataIsFetched(true);\n            });\n        }\n\n        if (user && user.uid) {\n            getStreamerInfo();\n        }\n    }, [user]);\n\n    const onBoardingDoneByStreamer = async () => {\n        const min = 0;\n        const max = 4;\n        const randomIndex = Math.floor(Math.random() * (max - min + 1)) + min;\n\n        const backgroundSelected = PROFILE_BACKGROUND_GRADIENTS[randomIndex];\n        setBackgroundGradient(backgroundSelected);\n\n        await updateStreamerPublicProfile(user.uid, {\n            backgroundGradient: backgroundSelected,\n            displayName: user.displayName,\n            photoUrl: user.photoUrl\n        });\n\n        window.analytics.track('Public profile onboarding done', {\n            uid: user.uid,\n            timestamp: (new Date()).getTime()\n        });\n        setOnBoardingDone(true);\n    }\n\n    const handleTabChange = (event, newValue) => {\n        setSelectedTab(newValue)\n    }\n\n    const handleTagDelete = async (indexToDelete) => {\n        const tags = streamerTags.filter((tag, index) => indexToDelete !== index);\n\n        try {\n            await updateStreamerPublicProfile(user.uid, { tags });\n            setStreamerTags(tags);\n        } catch (error) {\n            console.log(error);\n            alert(t('StreamerProfileEditor.errors.deleteTag'));\n        }\n    }\n\n    const updateSocialLinks = (value, index) => {\n        setSocialLinksChanged(true);\n        let newArray = [...socialLinks];\n        newArray[index] = {\n            ...newArray[index],\n            value\n        };\n\n        setSocialLinks(newArray);\n    }\n\n    const saveLinks = async () => {\n        // Creates an array without the placeholder value\n        const objectToSave = {};\n        socialLinks.forEach((link, index) => {\n            objectToSave[index] = { socialPage: link.socialPage, value: link.value };\n        });\n\n        try {\n            await saveStreamerLinks(user.uid, objectToSave);\n        } catch (error) {\n            console.log(error);\n            alert(t('StreamerProfileEditor.errors.updateLinks'));\n        }\n        setSocialLinksChanged(false);\n    }\n\n    const addTag = async () => {\n        setOnBoardingStep(4);\n        setAddingTag(true);\n    }\n\n    const uploadBackgroundImage = (e) => {\n        if (e.target.files[0]) {\n            const newBackgroundImage = (e.target.files[0]);\n            uploadImage(\n                newBackgroundImage,\n                `/StreamersProfilesBackgroundImages/${user.uid}`,\n                (progressValue) => setUploadImageStatus(progressValue * 100),\n                (error) => { alert('Error al agregar imagen'); console.log(error); },\n                async (url) => {\n                    try {\n                        await updateStreamerPublicProfile(user.uid, { backgroundUrl: url });\n                        alert(t('StreamerProfileEditor.confirmations.saveImage'));\n                    } catch (error) {\n                        alert(t('StreamerProfileEditor.errors.saveImage'));\n                        console.log(error);\n                    }\n                }\n            );\n\n            const reader = new FileReader();\n            reader.addEventListener('load', () => {\n                setBackgroundUrl(reader.result);\n            });\n\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    }\n\n    const copyTwitchURL = () => {\n        navigator.clipboard.writeText(twitchURL);\n        setOpenTooltip(true);\n        setTimeout(() => {\n            setOpenTooltip(false);\n        }, 1250);\n    }\n\n    const createLinearGradientCSS = () => {\n        if (backgroundGradient) {\n            let colorsString = '';\n            backgroundGradient.colors.forEach((color, index) => {\n                if (index !== backgroundGradient.colors.length - 1) {\n                    colorsString += `${color},`;\n                } else {\n                    colorsString += color;\n                }\n            });\n\n            return `linear-gradient(${backgroundGradient.angle}deg, ${colorsString})`;\n        }\n\n        return '';\n    }\n\n    const editBio = () => {\n        setOnBoardingStep(3);\n        setEditingBio(true);\n    }\n\n    const cancelEditing = () => {\n        setEditingBio(false);\n        setAddingTag(false);\n    }\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return\n        }\n        let source = result.source.index\n        let destination = result.destination.index\n\n        if (source === destination) {\n            return\n        }\n\n        const socialLinksCopy = [...socialLinks];\n        socialLinksCopy.splice(destination, 0, socialLinksCopy.splice(source, 1)[0]);\n\n        setSocialLinks(socialLinksCopy);\n        setSocialLinksChanged(true);\n    }\n\n    return (\n        <StreamerDashboardContainer user={user} containerStyle={styles.profileEditorContainer}>\n            {dataIsFetched &&\n                <>\n                    {onBoardingDone && !editingBio && !addingTag ?\n                        <>\n                            <div className={styles.coverContainer}>\n                                {backgroundUrl ?\n                                    <img src={backgroundUrl} alt='Cover' className={styles.cover} />\n                                    :\n                                    <div className={styles.cover} style={{ background: createLinearGradientCSS() }} />\n                                }\n                            </div>\n                            <div className={styles.editCoverButtonContainer}>\n                                <input\n                                    accept='image/*'\n                                    style={{ display: 'none' }}\n                                    type='file'\n                                    id='image-input'\n                                    onChange={uploadBackgroundImage} />\n                                <label htmlFor='image-input'>\n                                    <EditBioButton id='cover' component='span'>\n                                        <CameraIcon />\n                                        <div style={{ width: '0.4rem' }} />\n                                        {t('StreamerProfileEditor.editCover')}\n                                    </EditBioButton>\n                                </label>\n                            </div>\n                            <div className={styles.profileContainer}>\n                                <div className={styles.profilePicContainer}>\n                                    <img src={user.photoUrl} alt='User pfp' className={styles.profilePic} />\n                                </div>\n                                <div className={styles.streamerNameAndEditBioButtonContainer}>\n                                    <div className={styles.streamerNameContainer}>\n                                        <p className={styles.streamerName}>\n                                            {user.displayName}\n                                        </p>\n                                        <div className={styles.founderBadgeContainer}>\n                                            {badge &&\n                                                <FounderBadge className={styles.founderBadge} />\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className={styles.editBioButtonContainer}>\n                                        <EditBioButton variant='contained'\n                                            onClick={editBio}>\n                                            {!editingBio ?\n                                                <>\n                                                    <EditIcon />\n                                                    <div style={{ width: '0.4rem' }} />\n                                                    {t('StreamerProfileEditor.editBio')}\n                                                </>\n                                                :\n                                                t('StreamerProfileEditor.saveChanges')\n                                            }\n                                        </EditBioButton>\n                                    </div>\n                                </div>\n                                {/* <div className={styles.twitchURLContainer}>\n                                    <a href={twitchURL} target='_blank' rel='noreferrer' className={styles.twitchURL} >{twitchURL}</a>\n                                    <Tooltip placement='top' open={openTooltip} title='Copiado'>\n                                        <CopyIcon onClick={copyTwitchURL} />\n                                    </Tooltip>\n                                </div> */}\n                                <div className={styles.bioContainer}>\n                                    <p className={styles.bioText} onClick={editBio}>\n                                        {streamerBio}\n                                    </p>\n                                </div>\n                                <ul className={styles.tagsList}>\n                                    {streamerTags.map((data, index) => {\n                                        return (\n                                            <li key={`chip-${data}-${index}`} className={styles.tag}>\n                                                <QaplaChip\n                                                    label={data}\n                                                    onDelete={() => handleTagDelete(index)}\n                                                />\n                                            </li>\n                                        )\n                                    })}\n                                    <li key='new' className={styles.tag}>\n                                        <QaplaChip onClick={addTag}\n                                            label={t('StreamerProfileEditor.addTag')}\n                                        />\n                                    </li>\n                                </ul>\n                                <div className={styles.showNextStreamsContainer}>\n                                    <p className={styles.showNextStreamsText}>\n                                        {t('StreamerProfileEditor.showUpcomingStreams')}\n                                    </p>\n                                    <QaplaSwitch\n                                        name='showNextStreams'\n                                    /** ToDo: Show streams in profile. Also show twitch status (online or offline) <= more of this on cloud function */\n                                    />\n                                </div>\n                                <QaplaTabs value={selectedTab} onChange={handleTabChange} aria-label='profile editor tabs' >\n                                    <QaplaTab wid label={t('StreamerProfileEditor.social')} {...a11yProps(0)} />\n                                    {/* <QaplaTab label='Códigos de creador' {...a11yProps(1)} /> */}\n                                </QaplaTabs>\n                                <TabPanel value={selectedTab} index={0} className={styles.socialLinksContainer}>\n                                    <DragDropContext onDragEnd={onDragEnd}>\n                                        <Droppable droppableId='links-droppable'>\n                                            {(provided, snapshot) => (\n                                                <div style={{ width: '100%' }}\n                                                    {...provided.droppableProps}\n                                                    ref={provided.innerRef}\n                                                >\n                                                    {socialLinks.map((data, index) => (\n                                                        <Draggable key={`draggable-link-${index}`} draggableId={`draggable-link-${index}`} index={index}>\n                                                            {(provided, snapshot) => (\n                                                                <div\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.draggableProps}\n                                                                    {...provided.dragHandleProps}\n                                                                >\n                                                                    <div\n                                                                        style={{\n                                                                            display: 'flex',\n                                                                            flexDirection: 'row',\n                                                                            alignItems: 'center',\n                                                                            width: '100%'\n                                                                        }}>\n                                                                        <div style={{ display: 'flex', width: '100%' }}>\n                                                                            <StreamerTextInput\n                                                                                label={data.socialPage}\n                                                                                containerClassName={styles.socialLinkContainer}\n                                                                                labelClassName={styles.socialLinkLabel}\n                                                                                value={data.value}\n                                                                                disabled={data.socialPage.toLowerCase() === 'twitch'}\n                                                                                placeholder={socialLinksPlaceholders[data.socialPage]}\n                                                                                classes={{ input: classes.linkPlaceholder }}\n                                                                                textInputClassName={classes.linkInput}\n                                                                                fullWidth\n                                                                                onChange={(e) => updateSocialLinks(e.target.value, index)}\n                                                                            />\n                                                                        </div>\n                                                                        <div style={{\n                                                                            display: 'flex',\n                                                                            backgroundColor: '#141833',\n                                                                            width: '30px',\n                                                                            minWidth: '30px',\n                                                                            height: '45px',\n                                                                            marginBottom: '12px',\n                                                                            alignSelf: 'flex-end',\n                                                                            borderRadius: '8px'\n\n                                                                        }} >\n                                                                            <div style={{\n                                                                                display: 'flex',\n                                                                                flex: 1,\n                                                                                padding: '14px 10px',\n                                                                            }}>\n                                                                                <div style={{\n                                                                                    display: 'flex',\n                                                                                    flex: 1,\n                                                                                    flexDirection: 'column',\n                                                                                    justifyContent: 'space-between',\n                                                                                }}>\n                                                                                    <div style={{\n                                                                                        display: 'flex',\n                                                                                        flex: 1,\n                                                                                        flexDirection: 'row',\n                                                                                        justifyContent: 'space-between',\n                                                                                        maxHeight: '3px'\n                                                                                    }}>\n                                                                                        <div style={{\n                                                                                            display: 'flex',\n                                                                                            backgroundColor: '#C4C4C4',\n                                                                                            width: '3px',\n                                                                                            height: '3px',\n                                                                                            borderRadius: '100px'\n                                                                                        }} />\n                                                                                        <div style={{\n                                                                                            display: 'flex',\n                                                                                            backgroundColor: '#C4C4C4',\n                                                                                            width: '3px',\n                                                                                            height: '3px',\n                                                                                            borderRadius: '100px'\n                                                                                        }} />\n                                                                                    </div>\n                                                                                    <div style={{\n                                                                                        display: 'flex',\n                                                                                        flex: 1,\n                                                                                        flexDirection: 'row',\n                                                                                        justifyContent: 'space-between',\n                                                                                        maxHeight: '3px'\n                                                                                    }}>\n                                                                                        <div style={{\n                                                                                            display: 'flex',\n                                                                                            backgroundColor: '#C4C4C4',\n                                                                                            width: '3px',\n                                                                                            height: '3px',\n                                                                                            borderRadius: '100px'\n                                                                                        }} />\n                                                                                        <div style={{\n                                                                                            display: 'flex',\n                                                                                            backgroundColor: '#C4C4C4',\n                                                                                            width: '3px',\n                                                                                            height: '3px',\n                                                                                            borderRadius: '100px'\n                                                                                        }} />\n                                                                                    </div>\n                                                                                    <div style={{\n                                                                                        display: 'flex',\n                                                                                        flex: 1,\n                                                                                        flexDirection: 'row',\n                                                                                        justifyContent: 'space-between',\n                                                                                        maxHeight: '3px'\n                                                                                    }}>\n                                                                                        <div style={{\n                                                                                            display: 'flex',\n                                                                                            backgroundColor: '#C4C4C4',\n                                                                                            width: '3px',\n                                                                                            height: '3px',\n                                                                                            borderRadius: '100px'\n                                                                                        }} />\n                                                                                        <div style={{\n                                                                                            display: 'flex',\n                                                                                            backgroundColor: '#C4C4C4',\n                                                                                            width: '3px',\n                                                                                            height: '3px',\n                                                                                            borderRadius: '100px'\n                                                                                        }} />\n                                                                                    </div>\n                                                                                </div>\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            )}\n                                                        </Draggable>\n                                                    ))}\n                                                    {provided.placeholder}\n                                                </div>\n                                            )}\n                                        </Droppable>\n                                    </DragDropContext>\n                                    <br />\n                                    {socialLinksChanged &&\n                                        <ContainedButton onClick={saveLinks}>\n                                            {t('StreamerProfileEditor.saveChanges')}\n                                        </ContainedButton>\n                                    }\n                                </TabPanel>\n                                <TabPanel value={selectedTab} index={1}>\n                                    <p>b</p>\n                                </TabPanel>\n                            </div>\n                        </>\n                        :\n                        <StreamerProfileEditorOnBoarding step={onBoardingStep}\n                            user={user}\n                            onBoardingDone={onBoardingDoneByStreamer}\n                            showOnlySpecificStep={editingBio || addingTag}\n                            streamerBio={streamerBio}\n                            streamerTags={streamerTags}\n                            closeOnBoarding={cancelEditing} />\n                    }\n                </>\n            }\n        </StreamerDashboardContainer>\n    )\n}\n\nexport default StreamerProfileEditor;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx",["242","243","244","245","246"],"import React from 'react';\nimport {\n    Grid,\n    AppBar,\n    Toolbar,\n    Link,\n    Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nimport styles from './StreamerDashboardContainer.module.css';\nimport StreamerSideBar from '../StreamerSideBar/StreamerSideBar';\nimport LanguageHandler from '../LanguageHandler/LanguageHandler';\n\nconst useStyles = makeStyles((theme) => ({\n    gridContainer: {\n        width: '100%',\n        display: 'flex',\n        boxSizing: 'border-box',\n        flexWrap: 'nowrap'\n    },\n    content: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(4) + 1,\n        paddingTop: theme.spacing(4) + 1,\n    }\n}));\n\nconst StreamerDashboardContainer = ({ children, user, containerStyle = {} }) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    return (\n        <Grid container className={[classes.gridContainer, styles.container]} alignItems={user ? 'flex-start' : 'center'} justify={user ? 'flex-start' : 'center'}>\n            {!user && user === undefined ?\n                <>\n                    {children}\n                </>\n                :\n                <>\n                    {history.location.pathname !== '/welcome' &&\n                        <StreamerSideBar user={user} />\n                    }\n                    <div className={`${classes.content} ${containerStyle}`}>\n                        {children}\n                    </div>\n                </>\n            }\n        </Grid>\n    );\n}\n\nexport default StreamerDashboardContainer;\n","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerTextInput/StreamerTextInput.jsx",[],["247","248"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageHandler/LanguageHandler.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTabs/QaplaTab.jsx",["249"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/storage.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventRewardsRemovedConfirmation.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventCustomMessageSentConfirmation.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsLeft/StreamsLeft.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsSwitch/StreamsSwitch.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventWarningQoinsDialog.jsx",[],["250","251"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx",["252","253","254"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/streamQapla.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaTerms/QaplaTerms.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventEndStreamConfirmDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx",["255","256","257"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStreamSuccessDialog.jsx",[],{"ruleId":"258","severity":1,"message":"259","line":97,"column":8,"nodeType":"260","endLine":97,"endColumn":38,"suggestions":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":230,"column":11,"nodeType":"268","messageId":"269","endLine":230,"endColumn":32},{"ruleId":"266","severity":1,"message":"270","line":234,"column":11,"nodeType":"268","messageId":"269","endLine":234,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":283,"column":103,"nodeType":"273","messageId":"274","endLine":283,"endColumn":105},{"ruleId":"262","replacedBy":"275"},{"ruleId":"264","replacedBy":"276"},{"ruleId":"262","replacedBy":"277"},{"ruleId":"264","replacedBy":"278"},{"ruleId":"258","severity":1,"message":"259","line":179,"column":8,"nodeType":"260","endLine":179,"endColumn":14,"suggestions":"279"},{"ruleId":"280","severity":1,"message":"281","line":235,"column":25,"nodeType":"282","endLine":235,"endColumn":49},{"ruleId":"262","replacedBy":"283"},{"ruleId":"264","replacedBy":"284"},{"ruleId":"262","replacedBy":"285"},{"ruleId":"264","replacedBy":"286"},{"ruleId":"266","severity":1,"message":"287","line":7,"column":28,"nodeType":"268","messageId":"269","endLine":7,"endColumn":37},{"ruleId":"266","severity":1,"message":"288","line":21,"column":11,"nodeType":"268","messageId":"269","endLine":21,"endColumn":18},{"ruleId":"266","severity":1,"message":"289","line":1,"column":17,"nodeType":"268","messageId":"269","endLine":1,"endColumn":26},{"ruleId":"262","replacedBy":"290"},{"ruleId":"264","replacedBy":"291"},{"ruleId":"262","replacedBy":"292"},{"ruleId":"264","replacedBy":"293"},{"ruleId":"266","severity":1,"message":"294","line":273,"column":21,"nodeType":"268","messageId":"269","endLine":273,"endColumn":31},{"ruleId":"258","severity":1,"message":"295","line":449,"column":8,"nodeType":"260","endLine":449,"endColumn":14,"suggestions":"296"},{"ruleId":"258","severity":1,"message":"297","line":243,"column":8,"nodeType":"260","endLine":243,"endColumn":44,"suggestions":"298"},{"ruleId":"266","severity":1,"message":"299","line":2,"column":67,"nodeType":"268","messageId":"269","endLine":2,"endColumn":74},{"ruleId":"266","severity":1,"message":"300","line":13,"column":28,"nodeType":"268","messageId":"269","endLine":13,"endColumn":36},{"ruleId":"266","severity":1,"message":"301","line":16,"column":28,"nodeType":"268","messageId":"269","endLine":16,"endColumn":33},{"ruleId":"266","severity":1,"message":"302","line":233,"column":12,"nodeType":"268","messageId":"269","endLine":233,"endColumn":29},{"ruleId":"266","severity":1,"message":"303","line":237,"column":12,"nodeType":"268","messageId":"269","endLine":237,"endColumn":23},{"ruleId":"266","severity":1,"message":"304","line":241,"column":12,"nodeType":"268","messageId":"269","endLine":241,"endColumn":21},{"ruleId":"266","severity":1,"message":"305","line":241,"column":23,"nodeType":"268","messageId":"269","endLine":241,"endColumn":35},{"ruleId":"258","severity":1,"message":"306","line":288,"column":8,"nodeType":"260","endLine":288,"endColumn":14,"suggestions":"307"},{"ruleId":"266","severity":1,"message":"308","line":387,"column":11,"nodeType":"268","messageId":"269","endLine":387,"endColumn":24},{"ruleId":"266","severity":1,"message":"309","line":4,"column":5,"nodeType":"268","messageId":"269","endLine":4,"endColumn":11},{"ruleId":"266","severity":1,"message":"310","line":5,"column":5,"nodeType":"268","messageId":"269","endLine":5,"endColumn":12},{"ruleId":"266","severity":1,"message":"311","line":6,"column":5,"nodeType":"268","messageId":"269","endLine":6,"endColumn":9},{"ruleId":"266","severity":1,"message":"312","line":7,"column":5,"nodeType":"268","messageId":"269","endLine":7,"endColumn":11},{"ruleId":"266","severity":1,"message":"313","line":14,"column":8,"nodeType":"268","messageId":"269","endLine":14,"endColumn":23},{"ruleId":"262","replacedBy":"314"},{"ruleId":"264","replacedBy":"315"},{"ruleId":"316","severity":1,"message":"317","line":26,"column":1,"nodeType":"318","endLine":26,"endColumn":51},{"ruleId":"262","replacedBy":"319"},{"ruleId":"264","replacedBy":"320"},{"ruleId":"266","severity":1,"message":"321","line":4,"column":5,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"322","line":5,"column":5,"nodeType":"268","messageId":"269","endLine":5,"endColumn":17},{"ruleId":"266","severity":1,"message":"323","line":6,"column":5,"nodeType":"268","messageId":"269","endLine":6,"endColumn":15},{"ruleId":"266","severity":1,"message":"324","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"325","line":6,"column":198,"nodeType":"268","messageId":"269","endLine":6,"endColumn":223},{"ruleId":"258","severity":1,"message":"326","line":213,"column":8,"nodeType":"260","endLine":213,"endColumn":84,"suggestions":"327"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'query' and 't'. Either include them or remove the dependency array.","ArrayExpression",["328"],"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'handleEventTypeChange' is assigned a value but never used.","Identifier","unusedVar","'handleStringDateChange' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["329"],["330"],["329"],["330"],["331"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["329"],["330"],["329"],["330"],"'ArrowIcon' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.",["329"],["330"],["329"],["330"],"'setBalance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPendingMessages'. Either include it or remove the dependency array. If 'setPendingMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["332"],"React Hook useEffect has a missing dependency: 'stream'. Either include it or remove the dependency array.",["333"],"'Tooltip' is defined but never used.","'CopyIcon' is defined but never used.","'XIcon' is defined but never used.","'uploadImageStatus' is assigned a value but never used.","'openTooltip' is assigned a value but never used.","'chipHover' is assigned a value but never used.","'setChipHover' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'socialLinksInitialValue' and 'twitchURL'. Either include them or remove the dependency array.",["334"],"'copyTwitchURL' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'LanguageHandler' is defined but never used.",["329"],["330"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["329"],["330"],"'InputBase' is defined but never used.","'NativeSelect' is defined but never used.","'InputLabel' is defined but never used.","'styles' is defined but never used.","'getStreamerAlertsSettings' is defined but never used.","React Hook useEffect has missing dependencies: 'alertSideRight' and 'mediaContent'. Either include them or remove the dependency array.",["335"],{"desc":"336","fix":"337"},"no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [user, history, isLoadingAuth, query, t]",{"range":"348","text":"349"},"Update the dependencies array to be: [query, t, user]",{"range":"350","text":"351"},"Update the dependencies array to be: [setPendingMessages, user]",{"range":"352","text":"353"},"Update the dependencies array to be: [streamStarted, dots, enablingQoins, stream]",{"range":"354","text":"355"},"Update the dependencies array to be: [socialLinksInitialValue, twitchURL, user]",{"range":"356","text":"357"},"Update the dependencies array to be: [streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, mediaContent, alertSideRight]",{"range":"358","text":"359"},[4293,4323],"[user, history, isLoadingAuth, query, t]",[4767,4773],"[query, t, user]",[17412,17418],"[setPendingMessages, user]",[6720,6756],"[streamStarted, dots, enablingQoins, stream]",[8892,8898],"[socialLinksInitialValue, twitchURL, user]",[9672,9748],"[streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, mediaContent, alertSideRight]"]
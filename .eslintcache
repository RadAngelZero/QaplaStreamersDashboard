[{"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx":"1","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx":"2","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js":"3","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js":"4","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CasthQutDialog/CasthQutDialog.jsx":"5","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BarProgressBit/BarProgressBit.jsx":"6","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx":"7","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js":"8","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js":"9","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx":"10","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx":"11","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/interactionsQapla.js":"12","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/RequestActivation/RequestActivation.jsx":"13","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventEndStreamConfirmDialog.jsx":"14","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CasthQutConfirmDialog/CasthQutConfirmDialog.jsx":"15","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx":"16","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js":"17","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx":"18","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding.jsx":"19","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/dynamicLinks.js":"20","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileModalDisableInteractions/StreamerProfileModalDisableInteractions.jsx":"21","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ModalQoinsDrops/ModalQoinsDrops.jsx":"22"},{"size":23358,"mtime":1662477283933,"results":"23","hashOfConfig":"24"},{"size":20005,"mtime":1662492583810,"results":"25","hashOfConfig":"24"},{"size":3364,"mtime":1662483862589,"results":"26","hashOfConfig":"24"},{"size":36131,"mtime":1662494776153,"results":"27","hashOfConfig":"24"},{"size":1953,"mtime":1662503046850,"results":"28","hashOfConfig":"24"},{"size":3823,"mtime":1662492426487,"results":"29","hashOfConfig":"24"},{"size":20857,"mtime":1662491719873,"results":"30","hashOfConfig":"24"},{"size":8372,"mtime":1662492592857,"results":"31","hashOfConfig":"24"},{"size":4014,"mtime":1661972327670,"results":"32","hashOfConfig":"24"},{"size":835,"mtime":1642711713952,"results":"33","hashOfConfig":"24"},{"size":34471,"mtime":1659995821173,"results":"34","hashOfConfig":"24"},{"size":2473,"mtime":1662477283940,"results":"35","hashOfConfig":"24"},{"size":11901,"mtime":1661972327656,"results":"36","hashOfConfig":"24"},{"size":5675,"mtime":1661974732629,"results":"37","hashOfConfig":"24"},{"size":1002,"mtime":1662503098697,"results":"38","hashOfConfig":"24"},{"size":7544,"mtime":1650310829994,"results":"39","hashOfConfig":"24"},{"size":362,"mtime":1614731664838,"results":"40","hashOfConfig":"24"},{"size":25007,"mtime":1662477283934,"results":"41","hashOfConfig":"24"},{"size":14755,"mtime":1659986034550,"results":"42","hashOfConfig":"24"},{"size":2185,"mtime":1661972327672,"results":"43","hashOfConfig":"24"},{"size":4314,"mtime":1662477283938,"results":"44","hashOfConfig":"24"},{"size":6609,"mtime":1662477283934,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rfo3np",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx",["92","93","94"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js",["95","96"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CasthQutDialog/CasthQutDialog.jsx",["97","98","99","100"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BarProgressBit/BarProgressBit.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CheersBitsRecordDialog/CheersBitsRecordDialog.jsx",["101","102"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js",[],["103","104"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx",["105","106","107","108","109","110","111","112","113"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/interactionsQapla.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/RequestActivation/RequestActivation.jsx",["114"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles, Card, Button, CardContent, CircularProgress } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport dayjs from 'dayjs';\n\nimport StreamerDashboardContainer from '../StreamerDashboardContainer/StreamerDashboardContainer';\nimport { ReactComponent as CloseIcon } from './../../assets/CloseIcon.svg';\nimport StreamerTextInput from '../StreamerTextInput/StreamerTextInput';\nimport { getInvitationCodeParams, getQlanIdWithQreatorCode, getUserDisplayName, giveReferrerRewardsToStreamer, removeInvitationCode, updateStreamerProfile, updateUserStreamerPublicData } from '../../services/database';\nimport { notifyActivationWithReferralCode } from '../../services/discord';\n\nconst useStyles = makeStyles((theme) => ({\n    containerStyle: {\n        padding: 0\n    },\n    background: {\n        background: 'conic-gradient(from 134.88deg at 50.55% 49.24%, #5600E1 -61.47deg, #373FFF 26.68deg, #A534FE 167.74deg, #B518FF 197.3deg, #5600E1 298.53deg, #373FFF 386.68deg), linear-gradient(0deg, rgba(3, 7, 34, 0.95), rgba(3, 7, 34, 0.95))',\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    card: {\n        backgroundColor: '#141833',\n        boxShadow: '0px 4px 100px 15px rgba(0, 0, 0, 0.25)',\n        borderRadius: '35px',\n        [theme.breakpoints.up('md')]: {\n            width: 450\n        },\n        paddingLeft: 30,\n        paddingRight: 30,\n        paddingTop: 24,\n        paddingBottom: 0\n    },\n    title: {\n        fontWeight: '600',\n        fontSize: '18px',\n        lineHeight: '32px',\n        textAlign: 'center',\n        color: '#FFFFFF',\n        whiteSpace: 'pre-line'\n    },\n    instructions: {\n        marginTop: 15,\n        fontWeight: '400',\n        fontSize: '14px',\n        lineHeight: '22px',\n        textAlign: 'center',\n        color: '#8F9BBA',\n        whiteSpace: 'pre-line'\n    },\n    textInput: {\n        textAlign: 'center',\n        paddingTop: 12,\n        paddingBottom: 12\n    },\n    activeFreeTrialButton: {\n        marginTop: 32,\n        backgroundColor: '#3B4BF9',\n        height: '56px',\n        borderRadius: '16px',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '20px',\n        letterSpacing: '0px',\n        color: '#FFF',\n        textTransform: 'none',\n        boxShadow: '0px 20px 40px -10px rgba(59, 75, 249, 0.4)',\n        '&:hover': {\n            background: '#2E3AC1',\n        },\n        '&:active': {\n            background: '#2E3AC1',\n            opacity: '0.9'\n        },\n        marginBottom: 60\n    },\n    noCode: {\n        textAlign: 'center',\n        width: '100%',\n        marginTop: 32,\n        fontWeight: '600',\n        fontSize: '16px',\n        lineHeight: '22px',\n        letterSpacing: '0.492px',\n        color: '#FFFFFF'\n    },\n    referralProgram: {\n        textAlign: 'center',\n        [theme.breakpoints.up('md')]: {\n            maxWidth: 450\n        },\n        paddingLeft: 30,\n        paddingRight: 30,\n        marginTop: 32,\n        fontWeight: '400',\n        fontSize: '16px',\n        lineHeight: '22px',\n        letterSpacing: '0.492px',\n        color: '#FFFFFF'\n    },\n    subscribeButton: {\n        marginTop: 40,\n        backgroundColor: '#00FFDD',\n        height: '56px',\n        borderRadius: '16px',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '20px',\n        letterSpacing: '0px',\n        color: '#0D1021',\n        textTransform: 'none',\n        boxShadow: '0px 20px 40px -10px rgba(0, 255, 221, 0.2)',\n        '&:hover': {\n            backgroundColor: '#00EACB'\n        },\n        '&:active': {\n            backgroundColor: '#00EACB',\n            opacity: '0.9'\n        }\n    },\n    subscribeButtonCointainer: {\n        marginBottom: 24,\n        marginTop: 180\n    }\n}));\n\nconst RequestActivation = ({ user, onSuccessActivation }) => {\n    const [referralCode, setReferralCode] = useState('');\n    const [validatingCode, setValidatingCode] = useState(false);\n    const history = useHistory();\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    const validateCode = async () => {\n        if (user.broadcasterType === '') {\n            return alert(t('NewStream.alerts.noChannelPoints'));\n        }\n\n        setValidatingCode(true);\n        if (referralCode) {\n            const referrerUid = await getQlanIdWithQreatorCode(referralCode);\n            if (referrerUid) {\n                if (referrerUid !== user.uid) {\n                    if (!user.referredBy) {\n                        activateFreeTrialWithReferralCode(referrerUid, {\n                            redemptionsPerStream: 40,\n                            streamsIncluded: 2\n                        });\n                    } else {\n                        setValidatingCode(false);\n                        alert('Ya usaste un código de referido antes');\n                    }\n                } else {\n                    setValidatingCode(false);\n                    alert('No puedes usar tu propio código');\n                }\n            } else {\n                const invitationCodeSnap = await getInvitationCodeParams(referralCode);\n                if (invitationCodeSnap.exists()) {\n                    if (invitationCodeSnap.val().freeTrial && invitationCodeSnap.val().subscriptionDetails) {\n                        activateFreeTrialWithInvitationCode(referralCode, invitationCodeSnap.val());\n                    }\n                } else {\n                    setValidatingCode(false);\n                    alert('Código invalido');\n                }\n            }\n        } else {\n            setValidatingCode(false);\n        }\n    }\n\n    const activateFreeTrialWithReferralCode = async (referrerUid, freeTrialInformation) => {\n        const startDate = dayjs.utc().toDate().getTime();\n        const endDate = dayjs.utc().add(1, 'month').endOf('day').toDate().getTime();\n        await updateStreamerProfile(user.uid, {\n            referredBy: referrerUid,\n            freeTrial: true,\n            premium: true,\n            currentPeriod: { startDate, endDate },\n            subscriptionDetails: freeTrialInformation\n        });\n\n        await updateUserStreamerPublicData(user.uid, {\n            premium: true\n        });\n\n        await giveReferrerRewardsToStreamer(referrerUid, user.displayName, endDate);\n\n        const referrerDisplayName = await getUserDisplayName(referrerUid);\n\n        await notifyActivationWithReferralCode(referrerDisplayName.val(), user.displayName);\n\n        await onSuccessActivation();\n        setValidatingCode(false);\n    }\n\n    const activateFreeTrialWithInvitationCode = async (code, freeTrialInformation) => {\n        const startDate = dayjs.utc().toDate().getTime();\n         const endDate = dayjs.utc().add(1, 'month').endOf('day').toDate().getTime();\n         await updateStreamerProfile(user.uid, {\n            freeTrial: true,\n            premium: true,\n            currentPeriod: { startDate, endDate },\n            subscriptionDetails: freeTrialInformation.subscriptionDetails\n        });\n\n        await updateUserStreamerPublicData(user.uid, {\n            premium: true\n        });\n\n        await removeInvitationCode(code);\n        await onSuccessActivation();\n        setValidatingCode(false);\n    }\n\n    return (\n        <StreamerDashboardContainer user={user} containerStyle={classes.containerStyle}>\n            <div className={classes.background}>\n                <div>\n                <Card className={classes.card}>\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        <CloseIcon onClick={() => history.goBack()} style={{ cursor: 'pointer' }} />\n                    </div>\n                    <CardContent>\n                        <p className={classes.title}>\n                            {t('RequestActivation.title')} 🚀\n                        </p>\n                        <p className={classes.instructions}>\n                            {validatingCode || !user.referredBy ?\n                                <>\n                                    {t('RequestActivation.descriptionP1')}\n                                    <b style={{ color: '#FFF' }}>{t('RequestActivation.descriptionHiglight')}</b>\n                                    {t('RequestActivation.descriptionP2')}\n                                </>\n                                :\n                                t('RequestActivation.buyAMembership')\n                            }\n                        </p>\n                        {validatingCode || !user.referredBy ?\n                            <>\n                                <StreamerTextInput\n                                    placeholder={t('RequestActivation.referralCode')}\n                                    fullWidth\n                                    containerStyle={{ marginTop: 24 }}\n                                    classes={{ input: classes.textInput }}\n                                    textInputStyle={{ background: '#202750', borderRadius: '16px' }}\n                                    value={referralCode}\n                                    onChange={(e) => setReferralCode(e.target.value)} />\n                                {validatingCode ?\n                                    <div style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', marginTop: 32 }}>\n                                        <CircularProgress style={{ color: '#3B4BF9' }} />\n                                    </div>\n                                    :\n                                    <Button\n                                        onClick={validateCode}\n                                        fullWidth\n                                        classes={{\n                                            root: classes.activeFreeTrialButton\n                                        }}>\n                                        {t('RequestActivation.startFreeTrial')}\n                                    </Button>\n                                }\n                            </>\n                            :\n                            <div className={classes.subscribeButtonCointainer}>\n                                <Button\n                                    fullWidth\n                                    onClick={() => history.push('/membership')}\n                                    classes={{ root: classes.subscribeButton }}>\n                                    {t('RequestActivation.subscribe')}\n                                </Button>\n                            </div>\n                        }\n                    </CardContent>\n                </Card>\n                {validatingCode || !user.referredBy ?\n                    <>\n                        <p className={classes.noCode}>\n                            {t('RequestActivation.dontHaveACode')}\n                        </p>\n                        <Button\n                            fullWidth\n                            onClick={() => history.push('/membership')}\n                            classes={{ root: classes.subscribeButton }}>\n                            {t('RequestActivation.subscribe')}\n                        </Button>\n                    </>\n                    :\n                    <p className={classes.referralProgram}>\n                        {t('RequestActivation.referralProgramP1')}\n                        <b style={{ color: '#FFF' }}>{t('RequestActivation.qreatorCode')}</b>\n                        {t('RequestActivation.referralProgramP2')}\n                    </p>\n                }\n                </div>\n            </div>\n        </StreamerDashboardContainer>\n    );\n}\n\nexport default RequestActivation;\n","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventEndStreamConfirmDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/CasthQutConfirmDialog/CasthQutConfirmDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx",["115","116","117"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/dynamicLinks.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileModalDisableInteractions/StreamerProfileModalDisableInteractions.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ModalQoinsDrops/ModalQoinsDrops.jsx",[],{"ruleId":"118","severity":1,"message":"119","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":253,"column":8,"nodeType":"124","endLine":253,"endColumn":102,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":394,"column":8,"nodeType":"124","endLine":394,"endColumn":42,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":26,"column":7,"nodeType":"120","messageId":"121","endLine":26,"endColumn":35},{"ruleId":"129","severity":1,"message":"130","line":565,"column":9,"nodeType":"131","messageId":"132","endLine":565,"endColumn":14},{"ruleId":"118","severity":1,"message":"133","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":35},{"ruleId":"118","severity":1,"message":"134","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":36},{"ruleId":"122","severity":1,"message":"135","line":19,"column":6,"nodeType":"124","endLine":19,"endColumn":18,"suggestions":"136"},{"ruleId":"118","severity":1,"message":"137","line":22,"column":11,"nodeType":"120","messageId":"121","endLine":22,"endColumn":23},{"ruleId":"118","severity":1,"message":"138","line":273,"column":21,"nodeType":"120","messageId":"121","endLine":273,"endColumn":31},{"ruleId":"122","severity":1,"message":"139","line":453,"column":8,"nodeType":"124","endLine":453,"endColumn":14,"suggestions":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"118","severity":1,"message":"145","line":2,"column":67,"nodeType":"120","messageId":"121","endLine":2,"endColumn":74},{"ruleId":"118","severity":1,"message":"146","line":13,"column":28,"nodeType":"120","messageId":"121","endLine":13,"endColumn":36},{"ruleId":"118","severity":1,"message":"147","line":16,"column":28,"nodeType":"120","messageId":"121","endLine":16,"endColumn":33},{"ruleId":"118","severity":1,"message":"148","line":233,"column":12,"nodeType":"120","messageId":"121","endLine":233,"endColumn":29},{"ruleId":"118","severity":1,"message":"149","line":237,"column":12,"nodeType":"120","messageId":"121","endLine":237,"endColumn":23},{"ruleId":"118","severity":1,"message":"150","line":241,"column":12,"nodeType":"120","messageId":"121","endLine":241,"endColumn":21},{"ruleId":"118","severity":1,"message":"151","line":241,"column":23,"nodeType":"120","messageId":"121","endLine":241,"endColumn":35},{"ruleId":"122","severity":1,"message":"152","line":288,"column":8,"nodeType":"124","endLine":288,"endColumn":14,"suggestions":"153"},{"ruleId":"118","severity":1,"message":"154","line":387,"column":11,"nodeType":"120","messageId":"121","endLine":387,"endColumn":24},{"ruleId":"118","severity":1,"message":"155","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"156","line":125,"column":27,"nodeType":"120","messageId":"121","endLine":125,"endColumn":43},{"ruleId":"118","severity":1,"message":"157","line":126,"column":24,"nodeType":"120","messageId":"121","endLine":126,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":269,"column":103,"nodeType":"160","messageId":"161","endLine":269,"endColumn":105},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alertSideRight', 'finishReaction', and 'queueAnimation'. Either include them or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has missing dependencies: 'displayDonation', 'donation.media', 'donation.message', and 'donation.messageExtraData'. Either include them or remove the dependency array.",["163"],"'streamerCustomMediaForCheers' is assigned a value but never used.","no-dupe-keys","Duplicate key 'media'.","ObjectExpression","unexpected","'notifyCashOutToQaplaAdmin' is defined but never used.","'saveStreamerCashOutRequest' is defined but never used.","React Hook useEffect has a missing dependency: 'bits'. Either include it or remove the dependency array.",["164"],"'qoinsCashOut' is assigned a value but never used.","'setBalance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPendingMessages'. Either include it or remove the dependency array. If 'setPendingMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'Tooltip' is defined but never used.","'CopyIcon' is defined but never used.","'XIcon' is defined but never used.","'uploadImageStatus' is assigned a value but never used.","'openTooltip' is assigned a value but never used.","'chipHover' is assigned a value but never used.","'setChipHover' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'socialLinksInitialValue' and 'twitchURL'. Either include them or remove the dependency array.",["168"],"'copyTwitchURL' is assigned a value but never used.","'useEffect' is defined but never used.","'setSelectedEvent' is assigned a value but never used.","'setStringDate' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, reactionsEnabled, queueAnimation, alertSideRight, finishReaction]",{"range":"179","text":"180"},"Update the dependencies array to be: [clip, mediaReady, giphyTextReady, donation.media, donation.messageExtraData, donation.message, displayDonation]",{"range":"181","text":"182"},"Update the dependencies array to be: [amountBits, bits]",{"range":"183","text":"184"},"Update the dependencies array to be: [setPendingMessages, user]",{"range":"185","text":"186"},"Update the dependencies array to be: [socialLinksInitialValue, twitchURL, user]",{"range":"187","text":"188"},[11629,11723],"[streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, reactionsEnabled, queueAnimation, alertSideRight, finishReaction]",[17094,17128],"[clip, mediaReady, giphyTextReady, donation.media, donation.messageExtraData, donation.message, displayDonation]",[687,699],"[amountBits, bits]",[17494,17500],"[setPendingMessages, user]",[8892,8898],"[socialLinksInitialValue, twitchURL, user]"]
[{"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx":"1","/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js":"2","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/InviteCode/InviteCode.jsx":"3","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EditStreamerEvent/EditStreamerEvent.jsx":"4","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx":"5","/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js":"6","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx":"7","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx":"8","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js":"9","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js":"10","/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js":"11","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js":"12","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js":"13","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx":"14","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx":"15","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx":"16","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js":"17","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx":"18","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx":"19","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PubSubTest/PubSubTest.jsx":"20","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js":"21"},{"size":2975,"mtime":1614731664830,"results":"22","hashOfConfig":"23"},{"size":159,"mtime":1614731664613,"results":"24","hashOfConfig":"23"},{"size":3325,"mtime":1614731664825,"results":"25","hashOfConfig":"23"},{"size":19416,"mtime":1614731664823,"results":"26","hashOfConfig":"23"},{"size":3264,"mtime":1619126793837,"results":"27","hashOfConfig":"23"},{"size":500,"mtime":1614731664837,"results":"28","hashOfConfig":"23"},{"size":3579,"mtime":1614731664824,"results":"29","hashOfConfig":"23"},{"size":7033,"mtime":1619126793837,"results":"30","hashOfConfig":"23"},{"size":362,"mtime":1614731664838,"results":"31","hashOfConfig":"23"},{"size":10791,"mtime":1619894666938,"results":"32","hashOfConfig":"23"},{"size":3156,"mtime":1619042754281,"results":"33","hashOfConfig":"23"},{"size":4003,"mtime":1619894681084,"results":"34","hashOfConfig":"23"},{"size":1369,"mtime":1614731664841,"results":"35","hashOfConfig":"23"},{"size":6499,"mtime":1617847012924,"results":"36","hashOfConfig":"23"},{"size":4141,"mtime":1614731664833,"results":"37","hashOfConfig":"23"},{"size":20545,"mtime":1617922434146,"results":"38","hashOfConfig":"23"},{"size":2945,"mtime":1619476170643,"results":"39","hashOfConfig":"23"},{"size":1011,"mtime":1614731664821,"results":"40","hashOfConfig":"23"},{"size":2300,"mtime":1614731664828,"results":"41","hashOfConfig":"23"},{"size":6921,"mtime":1619832187430,"results":"42","hashOfConfig":"23"},{"size":12184,"mtime":1619894416788,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"gt9ikh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx",[],["92","93"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/App.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/InviteCode/InviteCode.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EditStreamerEvent/EditStreamerEvent.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx",[],["94","95"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js",[],["96","97"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfile/StreamerProfile.jsx",["98"],"import React, { useEffect, useState } from 'react';\nimport { Avatar, Grid, Button, Card, CardContent, Box, IconButton, Hidden } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport styles from './StreamerProfile.module.css';\nimport StreamerDashboardContainer from '../StreamerDashboardContainer/StreamerDashboardContainer';\nimport { ReactComponent as TwitchIcon } from './../../assets/twitchIcon.svg';\nimport { ReactComponent as ArrowIcon } from './../../assets/Arrow.svg';\nimport { ReactComponent as AddIcon } from './../../assets/AddIcon.svg';\nimport StreamerSelect from '../StreamerSelect/StreamerSelect';\nimport { loadStreamsByStatus } from '../../services/database';\nimport StreamCard from '../StreamCard/StreamCard';\nimport {\n    SCEHDULED_EVENT_TYPE,\n    PENDING_APPROVAL_EVENT_TYPE,\n    PAST_STREAMS_EVENT_TYPE\n} from '../../utilities/Constants';\n\nconst StreamerProfile = ({ user, games }) => {\n    const history = useHistory();\n    const [streamType, setStreamType] = useState(SCEHDULED_EVENT_TYPE);\n    const [streams, setStreams] = useState({});\n\n    useEffect(() => {\n        function setStreamLoaded(streams) {\n            if (streams.exists()) {\n                setStreams(streams.val());\n            } else {\n                setStreams({});\n            }\n        }\n\n        async function loadStreams() {\n            if (user) {\n                setStreamLoaded(await loadStreamsByStatus(user.uid, streamType));\n            } else {\n                history.push('/');\n            }\n        }\n\n        loadStreams();\n    }, [streamType, user]);\n\n    const createStream = () => history.push('/create');\n\n    const goToStreamDetails = (streamId) => history.push({ pathname: `/edit/${streamId}`, state: { streamType }});\n\n    const changestreamType = (e) => setStreamType(parseInt(e.target.value));\n\n    /**\n     * Format the date to show in the card\n     * @param {string} date date in format DD-MM-YYYY\n     * @example formatDate(\"12-02-2021\") returns 12 Feb 2021\n     */\n    const formatDate = (timestamp) => {\n        const date = new Date(timestamp);\n        const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sept', 'Oct', 'Nov', 'Dic'];\n        return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\n    }\n\n    const onRemoveStream = (streamId) => {\n        const streamsCopy = {...streams};\n        delete streamsCopy[streamId];\n        setStreams(streamsCopy);\n    }\n\n    return (\n        <StreamerDashboardContainer user={user}>\n            {user &&\n                <>\n                    <Box display=\"flex\" flexDirection=\"row\" >\n                        <Hidden smUp>\n                            <div style={{ width: '10%' }}></div>\n                        </Hidden>\n                        <Hidden mdUp xsDown>\n                            <div style={{ width: '5%' }}></div>\n                        </Hidden>\n                        <div className={styles.avatarContainer}>\n                            <Avatar\n                                alt='User image'\n                                src={user.photoUrl} />\n                            <span className={styles.streamerName}>{user.displayName}</span>\n                        </div>\n                    </Box>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <Button variant='contained'\n                                className={styles.twitchButton}\n                                onClick={() => window.open(`https://www.twitch.tv/${user.displayName}`, '_blank')}\n                                startIcon={<TwitchIcon />}>\n                                {user.displayName}\n                            </Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container>\n                                <Grid item xs={3}>\n                                    <h1 className={styles.title}>My Streams</h1>\n                                </Grid>\n                                <Grid item xs={9} style={{ marginTop: '6rem' }}>\n                                    <StreamerSelect\n                                        value={streamType}\n                                        onChange={changestreamType}\n                                        Icon={ArrowIcon}>\n                                        <option value={SCEHDULED_EVENT_TYPE}>Scheduled</option>\n                                        <option value={PENDING_APPROVAL_EVENT_TYPE}>Pending Approval</option>\n                                        <option value={PAST_STREAMS_EVENT_TYPE}>Past Streams</option>\n                                    </StreamerSelect>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={4}>\n                                <Grid item xl={2} lg={3} md={3} sm={4} xs={10}>\n                                    <Card className={styles.createEventCard} onClick={createStream}>\n                                        <h1 className={styles.newStream}>\n                                            Post a <br /> Stream\n                                        </h1>\n                                        <CardContent>\n                                            <Box display='flex' justifyContent='center'>\n                                                <IconButton className={styles.createButton}>\n                                                    <AddIcon />\n                                                </IconButton>\n                                            </Box>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                                {streams && Object.keys(streams).map((streamId) => (\n                                    <Grid item xl={2} lg={3} md={3} sm={4} xs={10} key={streamId}>\n                                        <StreamCard\n                                            streamType={streamType}\n                                            streamId={streamId}\n                                            user={user}\n                                            game={streams[streamId].game}\n                                            games={games}\n                                            date={formatDate(streams[streamId].timestamp)}\n                                            enableOptionsIcon={streamType === PENDING_APPROVAL_EVENT_TYPE}\n                                            onClick={() => goToStreamDetails(streamId)}\n                                            onRemoveStream={onRemoveStream} />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </>\n            }\n        </StreamerDashboardContainer>\n    );\n}\n\nexport default StreamerProfile;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js",[],["99","100"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js",["101","102"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js",[],["103","104"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/auth.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStream.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerDashboardContainer/StreamerDashboardContainer.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/PubSubTest/PubSubTest.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/twitch.js",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"106","replacedBy":"112"},{"ruleId":"108","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":42,"column":8,"nodeType":"116","endLine":42,"endColumn":26,"suggestions":"117"},{"ruleId":"106","replacedBy":"118"},{"ruleId":"108","replacedBy":"119"},{"ruleId":"120","severity":2,"message":"121","line":239,"column":26,"nodeType":"122","messageId":"123","endLine":239,"endColumn":30},{"ruleId":"120","severity":2,"message":"121","line":244,"column":59,"nodeType":"122","messageId":"123","endLine":244,"endColumn":63},{"ruleId":"106","replacedBy":"124"},{"ruleId":"108","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":5,"nodeType":"122","messageId":"128","endLine":2,"endColumn":42},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],["129"],["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["131"],["129"],["130"],"no-undef","'user' is not defined.","Identifier","undef",["129"],["130"],"no-unused-vars","'giveStreamExperienceForRewardRedeemed' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [history, streamType, user]",{"range":"134","text":"135"},[1565,1583],"[history, streamType, user]"]
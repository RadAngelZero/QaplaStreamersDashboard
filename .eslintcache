[{"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/streamQapla.js":"1","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js":"2","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx":"3","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx":"4","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js":"5","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx":"6","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ContainedButton/ContainedButton.jsx":"7","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx":"8","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx":"9","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventManagementDialog.jsx":"10","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx":"11","/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js":"12","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx":"13","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QStore/QStore.jsx":"14","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx":"15","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/dynamicLinks.js":"16","/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js":"17","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStreamSuccessDialog.jsx":"18","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx":"19","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding.jsx":"20","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventCustomMessageSentConfirmation.jsx":"21","/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js":"22","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx":"23","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js":"24","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventWarningQoinsDialog.jsx":"25","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx":"26","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx":"27","/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js":"28","/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js":"29","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsLeft/StreamsLeft.jsx":"30","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx":"31","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx":"32"},{"size":6965,"mtime":1661194816154,"results":"33","hashOfConfig":"34"},{"size":870,"mtime":1650310830028,"results":"35","hashOfConfig":"34"},{"size":1288,"mtime":1648248621496,"results":"36","hashOfConfig":"34"},{"size":835,"mtime":1642711713952,"results":"37","hashOfConfig":"34"},{"size":34698,"mtime":1661197367724,"results":"38","hashOfConfig":"34"},{"size":9694,"mtime":1655147842856,"results":"39","hashOfConfig":"34"},{"size":1919,"mtime":1655147842851,"results":"40","hashOfConfig":"34"},{"size":17771,"mtime":1657120015524,"results":"41","hashOfConfig":"34"},{"size":2011,"mtime":1650310829999,"results":"42","hashOfConfig":"34"},{"size":13345,"mtime":1660742199600,"results":"43","hashOfConfig":"34"},{"size":21852,"mtime":1661015390014,"results":"44","hashOfConfig":"34"},{"size":362,"mtime":1614731664838,"results":"45","hashOfConfig":"34"},{"size":3579,"mtime":1614731664824,"results":"46","hashOfConfig":"34"},{"size":5900,"mtime":1654551560220,"results":"47","hashOfConfig":"34"},{"size":19592,"mtime":1660742199602,"results":"48","hashOfConfig":"34"},{"size":2185,"mtime":1655761146663,"results":"49","hashOfConfig":"34"},{"size":4796,"mtime":1661197280326,"results":"50","hashOfConfig":"34"},{"size":3326,"mtime":1655147842854,"results":"51","hashOfConfig":"34"},{"size":3170,"mtime":1655147842857,"results":"52","hashOfConfig":"34"},{"size":14755,"mtime":1659986034550,"results":"53","hashOfConfig":"34"},{"size":3416,"mtime":1650310830004,"results":"54","hashOfConfig":"34"},{"size":527,"mtime":1636998131402,"results":"55","hashOfConfig":"34"},{"size":2975,"mtime":1614731664830,"results":"56","hashOfConfig":"34"},{"size":2589,"mtime":1654551560223,"results":"57","hashOfConfig":"34"},{"size":3844,"mtime":1650310830005,"results":"58","hashOfConfig":"34"},{"size":6520,"mtime":1661197539027,"results":"59","hashOfConfig":"34"},{"size":34471,"mtime":1659995821173,"results":"60","hashOfConfig":"34"},{"size":1505,"mtime":1654551560223,"results":"61","hashOfConfig":"34"},{"size":8289,"mtime":1661194816157,"results":"62","hashOfConfig":"34"},{"size":1632,"mtime":1661197539028,"results":"63","hashOfConfig":"34"},{"size":1083,"mtime":1650310829993,"results":"64","hashOfConfig":"34"},{"size":7544,"mtime":1650310829994,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rfo3np",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/streamQapla.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/i18n.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsPackages/StreamsPackages.jsx",[],["135","136"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/Settings.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/database.js",["137","138"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/Settings/CheersSettings.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/ContainedButton/ContainedButton.jsx",[],["139","140"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSideBar/StreamerSideBar.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LanguageSelect/LanguageSelect.jsx",["141","142"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nimport { changeLanguage, getAvailableLanguages, getCurrentLanguage } from '../../utilities/i18n';\nimport { ReactComponent as TranslateIcon } from './../../assets/Translate.svg';\nimport { ReactComponent as ArrowIcon } from './../../assets/Arrow.svg';\nimport StreamerSelect from '../StreamerSelect/StreamerSelect';\n\nconst useStyles = makeStyles(() => ({\n    languageLabel: {\n        color: '#FFF',\n        fontSize: 16,\n        fontWeight: 600\n    }\n}));\n\nconst LanguageSelect = () => {\n    const [currentLanguageCode, setCurrentLanguageCode] = useState(getCurrentLanguage());\n    const [langData, setLangData] = useState([])\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        let tempLangArr = []\n        getAvailableLanguages().map((languageCode) => (\n            tempLangArr.push({\n                value: languageCode,\n                label: t(`LanguageHandler.languages.${languageCode}`)\n            })\n        ))\n        setLangData(tempLangArr)\n    }, [t])\n\n    const onLanguageChanged = (languageCode) => {\n        changeLanguage(languageCode);\n        setCurrentLanguageCode(languageCode);\n    }\n\n    return (\n        <div style={{\n            display: 'flex'\n        }}>\n            <TranslateIcon style={{\n                display: 'flex'\n            }} />\n            {/* The style of this select needs to be implemented inline */}\n            <div style={{\n                marginTop: '-10px',\n            }}>\n                <StreamerSelect\n                    style={{ backgroundColor: '#141833' }}\n                    data={langData}\n                    value={currentLanguageCode}\n                    onChange={onLanguageChanged}\n                    overflowY='hidden'\n                    overflowX='hidden'\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default LanguageSelect;","/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventManagementDialog.jsx",["143"],"import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Dialog, DialogContent, makeStyles } from '@material-ui/core';\n\nimport StreamerTextInput from '../StreamerTextInput/StreamerTextInput';\nimport { ReactComponent as CloseIcon } from './../../assets/CloseIcon.svg';\nimport { ReactComponent as TickSquare } from './../../assets/TickSquare.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    dialogContainer: {\n        backdropFilter: 'blur(50px)',\n        [theme.breakpoints.down('md')]: {\n            backgroundColor: '#141833',\n        }\n    },\n    dialogRoot: {\n    },\n    paper: {\n        backgroundColor: '#141833',\n        color: '#FFF',\n        overflow: 'visible',\n        borderRadius: '35px',\n        padding: '64px',\n        minWidth: 'min-content',\n        [theme.breakpoints.down('md')]: {\n            minWidth: '100%',\n            minHeight: '100%',\n        }\n    },\n    itemsContainer: {\n        display: 'flex',\n        [theme.breakpoints.down('md')]: {\n            padding: '184px 66px 20px 66px',\n        },\n        [theme.breakpoints.down('sm')]: {\n            flexWrap: 'wrap',\n            gap: '50px 0px'\n        }\n    },\n    closeButtonContainer: {\n        position: 'absolute',\n        top: '24px',\n        right: '24px',\n        [theme.breakpoints.down('md')]: {\n            top: '118px',\n            right: '128px',\n        }\n    },\n    closeButton: {\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    title: {\n        fontSize: '18px',\n        fontStyle: 'normal',\n        fontWeight: '500',\n        lineHeight: '32px',\n        letterSpacing: '0px'\n    },\n    subtitle: {\n        color: '#FFFFFF9A',\n        fontSize: '12px',\n        fontStyle: 'normal',\n        fontWeight: '400',\n        lineHeight: '18px',\n        letterSpacing: '0px',\n        marginTop: '8px',\n    },\n    startButtonRoot: {\n        backgroundColor: '#00FFDD',\n        width: '200px',\n        height: '56px',\n        borderRadius: '16px',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '20px',\n        letterSpacing: '0px',\n        color: '#0D1021',\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: '#00EACB'\n        },\n        '&:active': {\n            backgroundColor: '#00EACB',\n            opacity: '0.9'\n        }\n    },\n    startText: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '22px',\n        letterSpacing: '0.492000013589859px',\n        height: '56px',\n        borderRadius: '16px',\n        color: '#FFFFFF'\n    },\n    enabledXQText: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '400',\n        lineHeight: '22px',\n        letterSpacing: '0.492000013589859px',\n        height: '56px',\n        color: '#00FFDD'\n    },\n    qoinsButtonRoot: {\n        backgroundColor: '#3B4BF9',\n        width: '200px',\n        height: '56px',\n        borderRadius: '16px',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '20px',\n        letterSpacing: '0px',\n        color: '#FFF',\n        textTransform: 'none',\n        '&:hover': {\n            background: '#2E3AC1',\n        },\n        '&:active': {\n            background: '#2E3AC1',\n            opacity: '0.9'\n        }\n    },\n    qoinsButtonRootDisabled: {\n        backgroundColor: '#3B4BF9',\n        width: '200px',\n        height: '56px',\n        borderRadius: '16px',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '20px',\n        letterSpacing: '0px',\n        color: '#FFF !important',\n        textTransform: 'none',\n        opacity: '0.2'\n    },\n    textInputContainer: {\n        backgroundColor: '#202750',\n        borderRadius: '16px',\n        paddingRight: '4px',\n        overflow: 'hidden'\n    },\n    sendContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        [theme.breakpoints.up('md')]: {\n            minWidth: '400px',\n        },\n    },\n    sendButtonRoot: {\n        backgroundColor: '#6C5DD3',\n        width: '165px',\n        height: '56px',\n        borderRadius: '16px',\n        alignSelf: 'flex-end',\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontWeight: '600',\n        lineHeight: '20px',\n        letterSpacing: '0px',\n        color: '#FFF',\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: '#6C5DD3',\n            opacity: '0.9'\n        },\n        '&:active': {\n            backgroundColor: '#6C5DD3',\n            opacity: '0.8'\n        }\n    },\n    eventNameContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        position: 'absolute',\n        right: '30px',\n        bottom: '-40px',\n        gap: '0px 5px',\n        [theme.breakpoints.down('md')]: {\n            top: '98px',\n            left: '128px',\n            bottom: 'auto',\n            width: '60%',\n            // right: 'auto',\n            paddingTop: '30px',\n            backgroundColor: '#141833'\n        },\n        [theme.breakpoints.down('xs')]: {\n            top: '148px',\n            left: '128px',\n            bottom: 'auto',\n            right: 'auto',\n            paddingTop: '30px',\n            flexWrap: 'wrap',\n            flexDirection: 'column',\n        },\n\n        fontSize: '16px',\n        fontStyle: 'normal',\n        fontWeight: '500',\n        lineHeight: '24px',\n        letterSpacing: '0px',\n    },\n    eventName: {\n        background: 'linear-gradient(90deg, #E5BAFF 0%, #FFFCC0 44.48%), #FFFFFF',\n        backgroundClip: 'text',\n        WebkitBackgroundClip: 'text',\n        WebkitTextFillColor: 'transparent'\n    },\n}));\n\nconst EventManagementDialog = ({ open, stream = null, streamStarted, streamTitle, date, hour, onClose, startStream, enableQoins, closeStream, closingStream, sendMessage }) => {\n    const classes = useStyles();\n    const [message, setMessage] = useState('');\n    const [dots, setDots] = useState('')\n    const [enablingQoins, setEnablingQoins] = useState(false);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if ((streamStarted && !stream) || (enablingQoins && !stream.qoinsEnabled)) {\n            setTimeout(() => {\n                if (dots.length > 2) {\n                    setDots('');\n                } else {\n                    setDots(dots + '.');\n                }\n            }, 500);\n        }\n        if ((streamStarted && stream) && !enablingQoins && dots.length > 0) {\n            setDots('');\n        }\n    }, [streamStarted, dots, enablingQoins]);\n\n    const startStreamHandler = async () => {\n        await startStream();\n    }\n\n    const enableQoinsHandler = async () => {\n        setEnablingQoins(true);\n        await enableQoins();\n        setEnablingQoins(false);\n    }\n\n    const closeStreamHandler = async () => {\n        closeStream();\n    }\n\n    const sendNotificationHandler = async () => {\n        // We need to add validations, check BioEditorTextArea to get an idea for a possible implementation\n        await sendMessage(message);\n        setMessage('');\n    }\n\n    return (\n        <Dialog onClose={onClose} open={open} classes={{\n            container: classes.dialogContainer,\n            root: classes.dialogRoot,\n            paper: classes.paper\n        }}\n            maxWidth='sm'\n            fullWidth>\n            <DialogContent style={{ padding: '0px' }}>\n                <div className={classes.closeButtonContainer}>\n                    <CloseIcon onClick={onClose} className={classes.closeButton} />\n                </div>\n                <div className={classes.itemsContainer}>\n                    <div style={{ display: 'flex', flexDirection: 'column', minWidth: '210px', width: '210px', marginRight: '70px' }}>\n                        <p className={classes.title}>\n                            {t('QaplaStreamDialogs.EventManagementDialog.streamActions')}\n                        </p>\n                        <p className={classes.subtitle}>\n                            {t('QaplaStreamDialogs.EventManagementDialog.manageRewards')}\n                        </p>\n                        <div style={{ height: '20px' }} />\n                        {(!stream && !streamStarted) &&\n                            <Button\n                                style={{ boxShadow: '0px 20px 40px -10px rgba(0, 255, 221, 0.2)' }}\n                                onClick={startStreamHandler}\n                                classes={{ root: classes.startButtonRoot }}>\n                                {t('QaplaStreamDialogs.EventManagementDialog.start')}\n                            </Button>\n                        }\n\n                        {!stream && streamStarted &&\n                            <p className={classes.startText}>\n                                {`${t('QaplaStreamDialogs.EventManagementDialog.creatingRewards')}${dots}`}\n                            </p>\n                        }\n\n                        {stream && !stream.qoinsEnabled &&\n                            <div style={{ display: 'flex', height: '56px', alignItems: 'center' }}>\n                                <TickSquare style={{ marginTop: '7.5px' }} />\n                                <p className={classes.enabledXQText}>\n                                    {t('QaplaStreamDialogs.EventManagementDialog.xqEnabled')}\n                                </p>\n                            </div>\n                        }\n\n                        {stream && enablingQoins &&\n                            <p className={classes.startText}>\n                                {`${t('QaplaStreamDialogs.EventManagementDialog.enablingQoins')}${dots}`}\n                            </p>\n                        }\n\n                        {stream && stream.qoinsEnabled &&\n                            <div style={{ display: 'flex', height: '56px', alignItems: 'center' }}>\n                                <TickSquare style={{ marginTop: '7.5px' }} />\n                                <p className={classes.enabledXQText}>\n                                    {t('QaplaStreamDialogs.EventManagementDialog.qoinsEnabled')}\n                                </p>\n                            </div>\n                        }\n                        <div style={{ height: '6px' }} />\n                        {!enablingQoins &&\n                            <Button\n                                onClick={(stream && stream.qoinsEnabled) ? closeStreamHandler : enableQoinsHandler}\n                                classes={{\n                                    root: classes.qoinsButtonRoot,\n                                    disabled: classes.qoinsButtonRootDisabled\n                                }}\n                                style={!stream ? { backgroundColor: '#0000' } : { boxShadow: '0px 20px 40px -10px rgba(59, 75, 249, 0.4)' }}\n                                disabled={!stream || (stream && enablingQoins) || closingStream}>\n                                {(stream && stream.qoinsEnabled) ?\n                                    t('QaplaStreamDialogs.EventManagementDialog.end')\n                                    :\n                                    t('QaplaStreamDialogs.EventManagementDialog.enableQoins')\n                                }\n                            </Button>\n                        }\n                    </div>\n                    <div className={classes.sendContainer}>\n                        <p className={classes.title}>\n                            💬 {t('QaplaStreamDialogs.EventManagementDialog.sendMessage')}\n                        </p>\n                        <p className={classes.subtitle}>\n                            {t('QaplaStreamDialogs.EventManagementDialog.sendMessageDetails')}\n                        </p>\n                        <div style={{ height: '20px' }} />\n                        <StreamerTextInput\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            textInputStyle={{ marginTop: '0px' }}\n                            textInputClassName={classes.textInputContainer}\n                            fullWidth\n                            multiline\n                            rows={6}\n                            maxRows={6}\n                            rowsMax={6}\n                        />\n                        <div style={{ height: '12px' }} />\n                        <Button\n                            onClick={sendNotificationHandler}\n                            classes={{\n                                root: classes.sendButtonRoot\n                            }}>\n                            {t('QaplaStreamDialogs.EventManagementDialog.send')}\n                        </Button>\n                    </div>\n                </div>\n            </DialogContent>\n            <div className={classes.eventNameContainer}>\n                <p className={classes.eventName}>\n                    {`${streamTitle} `}\n                </p>\n                <p>\n                    {`/ ${date} / ${hour}`}\n                </p>\n            </div>\n\n        </Dialog>\n    )\n}\n\nexport default EventManagementDialog;",["144","145"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/LiveDonations/LiveDonations.jsx",["146","147","148"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/reportWebVitals.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/EventSent/EventSent.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QStore/QStore.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamCard/StreamCard.jsx",["149"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/dynamicLinks.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/Router.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/NewStream/NewStreamSuccessDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerSelect/StreamerSelect.jsx",["150","151","152"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditorOnBoarding/StreamerProfileEditorOnBoarding.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventCustomMessageSentConfirmation.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/index.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerOnBoarding/StreamerOnBoarding.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/discord.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/QaplaStreamDialogs/EventWarningQoinsDialog.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamersSignin/StreamersSignin.jsx",["153"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamerProfileEditor/StreamerProfileEditor.jsx",["154","155","156","157","158","159","160","161","162"],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/services/firebase.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/utilities/Constants.js",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/StreamsLeft/StreamsLeft.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BackButton/BackButton.jsx",[],"/Users/diego/Documents/react/QaplaStreamersDashboard/src/components/BioEditorTextArea/BioEditorTextArea.jsx",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":26,"column":7,"nodeType":"169","messageId":"170","endLine":26,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":536,"column":9,"nodeType":"173","messageId":"174","endLine":536,"endColumn":14},{"ruleId":"163","replacedBy":"175"},{"ruleId":"165","replacedBy":"176"},{"ruleId":"167","severity":1,"message":"177","line":7,"column":28,"nodeType":"169","messageId":"170","endLine":7,"endColumn":37},{"ruleId":"167","severity":1,"message":"178","line":21,"column":11,"nodeType":"169","messageId":"170","endLine":21,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":243,"column":8,"nodeType":"181","endLine":243,"endColumn":44,"suggestions":"182"},{"ruleId":"163","replacedBy":"183"},{"ruleId":"165","replacedBy":"184"},{"ruleId":"167","severity":1,"message":"185","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":14},{"ruleId":"179","severity":1,"message":"186","line":301,"column":8,"nodeType":"181","endLine":301,"endColumn":84,"suggestions":"187"},{"ruleId":"179","severity":1,"message":"188","line":417,"column":8,"nodeType":"181","endLine":417,"endColumn":10,"suggestions":"189"},{"ruleId":"167","severity":1,"message":"190","line":373,"column":11,"nodeType":"169","messageId":"170","endLine":373,"endColumn":26},{"ruleId":"167","severity":1,"message":"191","line":4,"column":5,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"192","line":5,"column":5,"nodeType":"169","messageId":"170","endLine":5,"endColumn":17},{"ruleId":"167","severity":1,"message":"193","line":6,"column":5,"nodeType":"169","messageId":"170","endLine":6,"endColumn":15},{"ruleId":"179","severity":1,"message":"194","line":97,"column":8,"nodeType":"181","endLine":97,"endColumn":38,"suggestions":"195"},{"ruleId":"167","severity":1,"message":"196","line":2,"column":67,"nodeType":"169","messageId":"170","endLine":2,"endColumn":74},{"ruleId":"167","severity":1,"message":"197","line":13,"column":28,"nodeType":"169","messageId":"170","endLine":13,"endColumn":36},{"ruleId":"167","severity":1,"message":"198","line":16,"column":28,"nodeType":"169","messageId":"170","endLine":16,"endColumn":33},{"ruleId":"167","severity":1,"message":"199","line":233,"column":12,"nodeType":"169","messageId":"170","endLine":233,"endColumn":29},{"ruleId":"167","severity":1,"message":"200","line":237,"column":12,"nodeType":"169","messageId":"170","endLine":237,"endColumn":23},{"ruleId":"167","severity":1,"message":"201","line":241,"column":12,"nodeType":"169","messageId":"170","endLine":241,"endColumn":21},{"ruleId":"167","severity":1,"message":"202","line":241,"column":23,"nodeType":"169","messageId":"170","endLine":241,"endColumn":35},{"ruleId":"179","severity":1,"message":"203","line":288,"column":8,"nodeType":"181","endLine":288,"endColumn":14,"suggestions":"204"},{"ruleId":"167","severity":1,"message":"205","line":387,"column":11,"nodeType":"169","messageId":"170","endLine":387,"endColumn":24},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'streamerCustomMediaForCheers' is assigned a value but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'media'.","ObjectExpression","unexpected",["206"],["207"],"'ArrowIcon' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stream'. Either include it or remove the dependency array.","ArrayExpression",["208"],["206"],["207"],"'styles' is defined but never used.","React Hook useEffect has missing dependencies: 'alertSideRight', 'finishReaction', and 'queueAnimation'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'donation.media.id'. Either include it or remove the dependency array.",["210"],"'shareStreamLink' is assigned a value but never used.","'InputBase' is defined but never used.","'NativeSelect' is defined but never used.","'InputLabel' is defined but never used.","React Hook useEffect has missing dependencies: 'query' and 't'. Either include them or remove the dependency array.",["211"],"'Tooltip' is defined but never used.","'CopyIcon' is defined but never used.","'XIcon' is defined but never used.","'uploadImageStatus' is assigned a value but never used.","'openTooltip' is assigned a value but never used.","'chipHover' is assigned a value but never used.","'setChipHover' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'socialLinksInitialValue' and 'twitchURL'. Either include them or remove the dependency array.",["212"],"'copyTwitchURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [streamStarted, dots, enablingQoins, stream]",{"range":"223","text":"224"},"Update the dependencies array to be: [streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, queueAnimation, alertSideRight, finishReaction]",{"range":"225","text":"226"},"Update the dependencies array to be: [donation.media.id]",{"range":"227","text":"228"},"Update the dependencies array to be: [user, history, isLoadingAuth, query, t]",{"range":"229","text":"230"},"Update the dependencies array to be: [socialLinksInitialValue, twitchURL, user]",{"range":"231","text":"232"},[6720,6756],"[streamStarted, dots, enablingQoins, stream]",[13529,13605],"[streamerId, streamerUid, donationQueue, listenersAreSetted, isPlayingAudio, queueAnimation, alertSideRight, finishReaction]",[17575,17577],"[donation.media.id]",[4293,4323],"[user, history, isLoadingAuth, query, t]",[8892,8898],"[socialLinksInitialValue, twitchURL, user]"]